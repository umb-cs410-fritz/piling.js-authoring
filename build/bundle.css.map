{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\ErrorNode.svelte",
    "..\\..\\JSONArrow.svelte",
    "..\\..\\JSONKey.svelte",
    "..\\..\\JSONNested.svelte",
    "..\\..\\JSONValueNode.svelte",
    "..\\..\\index.svelte",
    "..\\..\\Modal.svelte",
    "..\\..\\App.svelte",
    "..\\..\\Editor.svelte",
    "..\\..\\Error.svelte",
    "..\\..\\Example.svelte",
    "..\\..\\Examples.svelte",
    "..\\..\\Import.svelte",
    "..\\..\\Settings.svelte",
    "..\\..\\TopBar.svelte",
    "..\\..\\Warning.svelte",
    "..\\..\\CodeMirror.svelte",
    "..\\..\\ComponentSelector.svelte",
    "..\\..\\ModuleEditor.svelte",
    "..\\..\\Message.svelte",
    "..\\..\\CompilerOptions.svelte",
    "..\\..\\ConsoleLine.svelte",
    "..\\..\\ConsoleTable.svelte",
    "..\\..\\PaneWithPanel.svelte",
    "..\\..\\Viewer.svelte",
    "..\\..\\index.svelte",
    "..\\..\\Repl.svelte",
    "..\\..\\SplitPane.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { getContext, setContext } from 'svelte';\n  import contextKey from './context';\n  import JSONArrow from './JSONArrow.svelte';\n  import JSONNode from './JSONNode.svelte';\n  import JSONKey from './JSONKey.svelte';\n\n  export let key, value, isParentExpanded, isParentArray;\n  export let expanded = false;\n\n  $: stack = value.stack.split('\\n');\n\n  const context = getContext(contextKey);\n  setContext(contextKey, { ...context, colon: ':' })\n\n  $: if (!isParentExpanded) {\n    expanded = false;\n  }\n\n  function toggleExpand() {\n    expanded = !expanded;\n  }\n</script>\n<style>\n  li {\n    user-select: text;\n    word-wrap: break-word;\n    word-break: break-all;\n  }\n  .indent {\n    margin-left: var(--li-identation);\n  }\n  .collapse {\n    --li-display: inline;\n    display: inline;\n    font-style: italic;\n  }\n</style>\n<li class:indent={isParentExpanded}>\n  {#if isParentExpanded}\n    <JSONArrow on:click={toggleExpand} {expanded} />\n  {/if}\n  <JSONKey {key} colon={context.colon} {isParentExpanded} {isParentArray} />\n  <span on:click={toggleExpand}>Error: {expanded?'':value.message}</span>\n  {#if isParentExpanded}\n    <ul class:collapse={!expanded}>\n      {#if expanded}\n        <JSONNode key=\"message\" value={value.message} />\n        <li>\n          <JSONKey key=\"stack\" colon=\":\" {isParentExpanded} />\n          <span>\n            {#each stack as line, index}\n              <span class:indent={index > 0}>{line}</span><br />\n            {/each}\n          </span>\n        </li>\n      {/if}\n    </ul>\n  {/if}\n</li>",
    "<script>\n\timport { createEventDispatcher } from 'svelte';\n\tconst dispatch = createEventDispatcher();\n\n  function onClick(event) {\n    dispatch('click', event);\n  }\n\n  export let expanded;\n</script>\n<style>\n  .container {\n    display: inline-block;\n    width: var(--li-identation);\n    cursor: pointer;\n    margin-left: calc(-7px - var(--li-identation));\n    text-align: right;\n  }\n  .arrow {\n    transform-origin: 67% 50%;\n    position: relative;\n    line-height: 1.1em;\n    font-size: 0.75em;\n    margin-left: 0;\n    transition: 150ms;\n    color: var(--arrow-sign);\n  }\n  .expanded {\n    transform: rotateZ(90deg) translateX(-3px);\n  }\n</style>\n\n<div class=\"container\" on:click={onClick}>\n  <div class=\"arrow\" class:expanded={expanded}>{'\\u25B6'}</div>\n</div>",
    "<script>\n  import { isPrimitive } from './objType';\n  import JSONNode from './JSONNode.svelte';\n\n  export let key, isParentExpanded, isParentArray = false, colon = ':';\n\n  $: showKey = (isParentExpanded || !isParentArray || key != +key);\n</script>\n<style>\n  label {\n    display: inline-block;\n    color: var(--label-color);\n    margin: 0;\n  }\n  .spaced {\n    margin-right: var(--li-colon-space);\n  }\n</style>\n{#if showKey && key}\n  <label class:spaced={isParentExpanded}>\n    <span>{key}{colon}</span>\n  </label>\n{/if}",
    "<script>\n  import { getContext, setContext } from 'svelte';\n  import contextKey from './context';\n  import JSONArrow from './JSONArrow.svelte';\n  import JSONNode from './JSONNode.svelte';\n  import JSONKey from './JSONKey.svelte';\n\n  export let key, keys, colon = ':', label = '', isParentExpanded, isParentArray, isArray = false, bracketOpen, bracketClose;\n  export let previewKeys = keys;\n  export let getKey = key => key;\n  export let getValue = key => key;\n  export let getPreviewValue = getValue;\n  export let expanded = false, expandable = true;\n\n  const context = getContext(contextKey);\n  setContext(contextKey, { ...context, colon })\n\n  $: slicedKeys = expanded ? keys: previewKeys.slice(0, 5);\n\n  $: if (!isParentExpanded) {\n    expanded = false;\n  }\n\n  function toggleExpand() {\n    expanded = !expanded;\n  }\n\n  function expand() {\n    expanded = true;\n  }\n\n</script>\n<style>\n  .indent {\n    margin-left: var(--li-identation);\n  }\n  .collapse {\n    --li-display: inline;\n    display: inline;\n    font-style: italic;\n  }\n  .comma {\n    margin-left: -0.5em;\n    margin-right: 0.5em;\n  }\n</style>\n<li class:indent={isParentExpanded}>\n  {#if expandable && isParentExpanded}\n    <JSONArrow on:click={toggleExpand} {expanded} />\n  {/if}\n  <JSONKey {key} colon={context.colon} {isParentExpanded} {isParentArray} />\n  <span><span on:click={toggleExpand}>{label}</span>{bracketOpen}</span>\n    {#if isParentExpanded}\n      <ul class:collapse={!expanded} on:click={expand}>\n        {#each slicedKeys as key, index}\n          <JSONNode key={getKey(key)} isParentExpanded={expanded} isParentArray={isArray} value={expanded ? getValue(key) : getPreviewValue(key)} />\n          {#if !expanded && index < previewKeys.length - 1}\n            <span class=\"comma\">,</span>\n          {/if}\n        {/each}\n        {#if slicedKeys.length < previewKeys.length }\n          <span>…</span>\n        {/if}\n      </ul>\n    {:else}\n      <span>…</span>\n    {/if}\n  <span>{bracketClose}</span>\n</li>",
    "<script>\n  import { getContext } from 'svelte';\n  import contextKey from './context';\n\n  import JSONKey from './JSONKey.svelte';\n\n  export let key, value, valueGetter = null, isParentExpanded, isParentArray, nodeType;\n\n  const { colon } = getContext(contextKey);\n</script>\n<style>\n  li {\n    user-select: text;\n    word-wrap: break-word;\n    word-break: break-all;\n  }\n  .indent {\n    margin-left: var(--li-identation);\n  }\n  .String {\n    color: var(--string-color);\n  }\n  .Date {\n    color: var(--date-color);\n  }\n  .Number {\n    color: var(--number-color);\n  }\n  .Boolean {\n    color: var(--boolean-color);\n  }\n  .Null {\n    color: var(--null-color);\n  }\n  .Undefined {\n    color: var(--undefined-color);\n  }\n  .Function {\n    color: var(--function-color);\n    font-style: italic;\n  }\n  .Symbol {\n    color: var(--symbol-color);\n  }\n</style>\n<li class:indent={isParentExpanded}>\n  <JSONKey {key} {colon} {isParentExpanded} {isParentArray} />\n  <span class={nodeType}>\n    {valueGetter ? valueGetter(value) : value}\n  </span>\n</li>",
    "<script>\n  import JSONNode from './JSONNode.svelte';\n  import { setContext } from 'svelte';\n  import contextKey from './context';\n\n  setContext(contextKey, {});\n\n  export let key = '', value;\n</script>\n<style>\n  ul {\n    --string-color: #cb3f41;\n    --symbol-color: #cb3f41;\n    --boolean-color: #112aa7;\n    --function-color: #112aa7;\n    --number-color: #3029cf;\n    --label-color: #871d8f;\n    --arrow-color: #727272;\n    --null-color: #8d8d8d;\n    --undefined-color: #8d8d8d;\n    --date-color: #8d8d8d;\n    --li-identation: 1em;\n    --li-colon-space: 0.3em;\n    font-size: var(--json-tree-font-size, 12px);\n    font-family: 'Courier New', Courier, monospace;\n  }\n  ul :global(li) {\n    line-height: var(--li-line-height, 1.3);\n    display: var(--li-display, list-item);\n    list-style: none;\n  }\n  ul, ul :global(ul) {\n    padding: 0;\n    margin: 0;\n  }\n</style>\n<ul>\n  <JSONNode {key} {value} isParentExpanded={true} isParentArray={false} />\n</ul>\n",
    "<script>\n  import { setContext as baseSetContext, SvelteComponent } from 'svelte';\n  import { fade } from 'svelte/transition';\n\n  export let key = 'simple-modal';\n  export let closeButton = true;\n  export let closeOnEsc = true;\n  export let closeOnOuterClick = true;\n  export let styleBg = { top: 0, left: 0 };\n  export let styleWindow = {};\n  export let styleContent = {};\n  export let styleCloseButton = {};\n  export let setContext = baseSetContext;\n  export let transitionBg = fade;\n  export let transitionBgProps = { duration: 250 };\n  export let transitionWindow = transitionBg;\n  export let transitionWindowProps = transitionBgProps;\n\n  const defaultState = {\n    closeButton,\n    closeOnEsc,\n    closeOnOuterClick,\n    styleBg,\n    styleWindow,\n    styleContent,\n    styleCloseButton,\n    transitionBg,\n    transitionBgProps,\n    transitionWindow,\n    transitionWindowProps,\n  };\n  let state = { ...defaultState };\n\n  let Component = null;\n  let props = null;\n\n  let background;\n  let wrap;\n  let modalWindow;\n\n  const camelCaseToDash = str => str\n    .replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n\n  const toCssString = (props) => Object.keys(props)\n    .reduce((str, key) => `${str}; ${camelCaseToDash(key)}: ${props[key]}`, '');\n\n  // eslint-disable-next-line no-prototype-builtins\n  const isSvelteComponent = component => SvelteComponent.isPrototypeOf(component);\n\n  $: cssBg = toCssString(state.styleBg);\n  $: cssWindow = toCssString(state.styleWindow);\n  $: cssContent = toCssString(state.styleContent);\n  $: cssCloseButton = toCssString(state.styleCloseButton);\n  $: currentTransitionBg = state.transitionBg;\n  $: currentTransitionWindow = state.transitionWindow;\n\n  const toVoid = () => {};\n  let onOpen = toVoid;\n  let onClose = toVoid;\n  let onOpened = toVoid;\n  let onClosed = toVoid;\n\n  const open = (\n    NewComponent,\n    newProps = {},\n    options = {},\n    callback = {}\n  ) => {\n    Component = NewComponent;\n    props = newProps;\n    state = { ...defaultState, ...options };\n    onOpen = callback.onOpen || toVoid;\n    onClose = callback.onClose || toVoid;\n    onOpened = callback.onOpened || toVoid;\n    onClosed = callback.onClosed || toVoid;\n  };\n\n  const close = (callback = {}) => {\n    onClose = callback.onClose || onClose;\n    onClosed = callback.onClosed || onClosed;\n    Component = null;\n    props = null;\n  };\n\n  const handleKeydown = (event) => {\n    if (state.closeOnEsc && Component && event.key === 'Escape') {\n      event.preventDefault();\n      close();\n    }\n\n    if (Component && event.key === 'Tab') {\n      // trap focus\n      const nodes = modalWindow.querySelectorAll('*');\n      const tabbable = Array.from(nodes).filter(node => node.tabIndex >= 0);\n\n      let index = tabbable.indexOf(document.activeElement);\n      if (index === -1 && event.shiftKey) index = 0;\n\n      index += tabbable.length + (event.shiftKey ? -1 : 1);\n      index %= tabbable.length;\n\n      tabbable[index].focus();\n      event.preventDefault();\n    }\n  };\n\n  const handleOuterClick = (event) => {\n    if (\n      state.closeOnOuterClick && (\n        event.target === background || event.target === wrap\n      )\n    ) {\n      event.preventDefault();\n      close();\n    }\n  };\n\n  setContext(key, { open, close });\n</script>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n\n  .bg {\n    position: fixed;\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100vw;\n    height: 100vh;\n    background: rgba(0, 0, 0, 0.66);\n  }\n\n  .window-wrap {\n    position: relative;\n    margin: 2rem;\n    max-height: 100%;\n  }\n\n  .window {\n    position: relative;\n    width: 40rem;\n    max-width: 100%;\n    max-height: 100%;\n    margin: 2rem auto;\n    color: black;\n    border-radius: 0.5rem;\n    background: white;\n  }\n\n  .content {\n    position: relative;\n    padding: 1rem;\n    max-height: calc(100vh - 4rem);\n    overflow: auto;\n  }\n\n  .close {\n    display: block;\n    box-sizing: border-box;\n    position: absolute;\n    z-index: 1000;\n    top: 1rem;\n    right: 1rem;\n    margin: 0;\n    padding: 0;\n    width: 1.5rem;\n    height: 1.5rem;\n    border: 0;\n    color: black;\n    border-radius: 1.5rem;\n    background: white;\n    box-shadow: 0 0 0 1px black;\n    transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n                background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n    -webkit-appearance: none;\n  }\n\n  .close:before, .close:after {\n    content: '';\n    display: block;\n    box-sizing: border-box;\n    position: absolute;\n    top: 50%;\n    width: 1rem;\n    height: 1px;\n    background: black;\n    transform-origin: center;\n    transition: height 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),\n                background 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\n  }\n\n  .close:before {\n    -webkit-transform: translate(0, -50%) rotate(45deg);\n    -moz-transform: translate(0, -50%) rotate(45deg);\n    transform: translate(0, -50%) rotate(45deg);\n    left: 0.25rem;\n  }\n\n  .close:after {\n    -webkit-transform: translate(0, -50%) rotate(-45deg);\n    -moz-transform: translate(0, -50%) rotate(-45deg);\n    transform: translate(0, -50%) rotate(-45deg);\n    left: 0.25rem;\n  }\n\n  .close:hover {\n    background: black;\n  }\n\n  .close:hover:before, .close:hover:after {\n    height: 2px;\n    background: white;\n  }\n\n  .close:focus {\n    border-color: #3399ff;\n    box-shadow: 0 0 0 2px #3399ff;\n  }\n\n  .close:active {\n    transform: scale(0.9);\n  }\n\n  .close:hover, .close:focus, .close:active {\n    outline: none;\n  }\n</style>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n{#if Component}\n  <div\n    class=\"bg\"\n    on:click={handleOuterClick}\n    bind:this={background}\n    transition:currentTransitionBg={state.transitionBgProps}\n    style={cssBg}\n  >\n    <div class=\"window-wrap\" bind:this={wrap}>\n      <div\n        class=\"window\"\n        role=\"dialog\"\n        aria-modal=\"true\"\n        bind:this={modalWindow}\n        transition:currentTransitionWindow={state.transitionWindowProps}\n        on:introstart={onOpen}\n        on:outrostart={onClose}\n        on:introend={onOpened}\n        on:outroend={onClosed}\n        style={cssWindow}\n      >\n        {#if state.closeButton}\n          {#if isSvelteComponent(state.closeButton)}\n            <svelte:component this={state.closeButton} onClose={close} />\n          {:else}\n            <button on:click={close} class=\"close\" style={cssCloseButton} />\n          {/if}\n        {/if}\n        <div class=\"content\" style={cssContent}>\n          <svelte:component this={Component} {...props} />\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n<slot></slot>\n",
    "<script>\r\n  import { onDestroy } from 'svelte';\r\n  import { debounce } from '@flekschas/utils';\r\n  import Modal from 'svelte-simple-modal';\r\n  import Editor from './Editor.svelte';\r\n  import TopBar from './TopBar.svelte';\r\n  import * as stores from './stores';\r\n  import { STORAGE_SAVE_DEBOUNCE } from './constants';\r\n  import { saveStores, serializeStores } from './utils';\r\n\r\n  const saveStoresDb = debounce(() => {\r\n    const serializedStore = serializeStores(stores);\r\n    saveStores(serializedStore);\r\n  }, STORAGE_SAVE_DEBOUNCE);\r\n\r\n  const unsubscribers = Object.values(stores).map((property) => {\r\n    return property.subscribe(saveStoresDb);\r\n  });\r\n\r\n  onDestroy(() => {\r\n    unsubscribers.forEach((unsubscriber) => unsubscriber());\r\n  });\r\n\r\n  let rebundle;\r\n  let refresh;\r\n</script>\r\n\r\n<style>\r\n  .app {\r\n    height: 100vh;\r\n    background-color: #fff;\r\n    --font: 'Inter', 'Open Sans', 'Helvetica', 'Verdana', sans-serif;\r\n    --font-mono: 'Inconsolata', 'Menlo', 'Monaco', 'Consolas', 'Liberation Mono',\r\n      'Courier New', monospace;\r\n    --prime: rgb(3, 102, 114);\r\n    --second: #676778;\r\n    --back-light: #f6fafd;\r\n  }\r\n</style>\r\n\r\n<Modal>\r\n  <div class=\"app\">\r\n    <TopBar on:rebundle={rebundle} on:refresh={refresh} />\r\n    <Editor bind:rebundle bind:refresh />\r\n  </div>\r\n</Modal>\r\n",
    "<script>\r\n  import { getContext, onMount, onDestroy, tick } from 'svelte';\r\n  import { get } from 'svelte/store';\r\n  import Button from '@smui/button';\r\n  import clone from 'just-clone';\r\n  import Papa from 'papaparse';\r\n\r\n  import Error from './Error.svelte';\r\n  import Warning from './Warning.svelte';\r\n\r\n  import { debug, tabId, components, prevPilingState } from './stores';\r\n\r\n  import {\r\n    DEFAULT_SVELTE_URL,\r\n    DEFAULT_WORKERS_URL,\r\n    NAV_HEIGHT,\r\n  } from './constants';\r\n\r\n  import { readJsonFile } from './utils';\r\n\r\n  import pilingJs from '../node_modules/piling.js/dist/piling.min';\r\n  import pixiJs from '../node_modules/pixi.js/dist/pixi.min';\r\n  import umapJs from '../node_modules/umap-js/lib/umap-js.min';\r\n\r\n  import Import from './Import.svelte';\r\n\r\n  const { open: openModal } = getContext('simple-modal');\r\n  const svelteUrl = 'https://unpkg.com/svelte@latest';\r\n\r\n  let data = JSON.parse($components[1].source || '[]');\r\n  let init = false;\r\n\r\n  let sources = {\r\n    title: 'My Piling.js Project',\r\n    components: $components,\r\n  };\r\n\r\n  let container;\r\n  let repl;\r\n  let bc;\r\n  export const rebundle = () => {\r\n    if (repl && repl.rebundle) repl.rebundle();\r\n  };\r\n  export const refresh = () => {\r\n    if (repl) repl.refresh();\r\n  };\r\n  let windowWidth;\r\n\r\n  const openLoadDataModal = () => {\r\n    openModal(Import, { refreshHandler: refresh }, {});\r\n  };\r\n\r\n  onMount(async () => {\r\n    // eslint-ignore-next-line\r\n    let Repl = (await import('./repl')).default;\r\n    repl = new Repl({\r\n      target: container,\r\n      props: {\r\n        svelteUrl: DEFAULT_SVELTE_URL,\r\n        workersUrl: DEFAULT_WORKERS_URL,\r\n        orientation: windowWidth > 600 ? 'columns' : 'rows',\r\n        injectedJS: [\r\n          `(function(){${pixiJs.replace(\r\n            '//# sourceMappingURL=pixi.min.js.map',\r\n            ''\r\n          )};\\nPIXI.utils.skipHello();\\nwindow.PIXI=PIXI;})();`,\r\n          `(function(){${umapJs};})();`,\r\n          `(function(){${pilingJs};})();`,\r\n        ].join('\\n'),\r\n        openLoadDataModal,\r\n      },\r\n    });\r\n\r\n    // check for tab ID\r\n    if (!$tabId) console.log('somehow no tab id?');\r\n    bc = new BroadcastChannel($tabId);\r\n    bc.onmessage = function (m) {\r\n      const { type, payload } = m.data;\r\n      switch (type) {\r\n        case \"update\":\r\n          if (!$debug) prevPilingState.update(() => payload);\r\n          break;\r\n        }\r\n     }\r\n  });\r\n\r\n  onDestroy(() => {\r\n    if (repl) {\r\n      repl.$destroy();\r\n    }\r\n    bc.close();\r\n  });\r\n\r\n  async function updateOrientation(w) {\r\n    // Occasionally the REPL gets a bit screwed up if we set orientation while it's still\r\n    // intializing, so wait a tick.\r\n    await tick();\r\n    repl.$set({ orientation: w > 600 ? 'columns' : 'rows' });\r\n  }\r\n\r\n  $: ({ title, ...replData } = sources);\r\n  $: repl && updateOrientation(windowWidth);\r\n  $: repl && repl.refresh();\r\n  $: if (repl && data) {\r\n    components.update((_components) => {\r\n      _components[1].source = JSON.stringify(data, null, 2);\r\n      return _components;\r\n    });\r\n    // Manually rebundle + reload the editor text\r\n    repl.refresh();\r\n  }\r\n  $: components && repl && repl.refresh();\r\n\r\n  function reset() {\r\n    repl.update(clone(replData));\r\n  }\r\n</script>\r\n\r\n<style>\r\n  @media (min-width: 640px) {\r\n    main {\r\n      max-width: none;\r\n    }\r\n  }\r\n</style>\r\n\r\n<svelte:window bind:innerWidth={windowWidth} />\r\n<main style=\"height: calc(100% - {NAV_HEIGHT})\">\r\n  <div class=\"svelte-repl\" style=\"height: 100%\" bind:this={container} />\r\n</main>\r\n",
    "<script>\r\n  export let message = 'Something bad has happened! RUN!!1!';\r\n</script>\r\n\r\n<style>\r\n  p {\r\n    color: red;\r\n  }\r\n</style>\r\n\r\n<p>{message}</p>\r\n",
    "<script>\r\n  import { getContext } from 'svelte';\r\n  import Card, { PrimaryAction, Media, MediaContent } from '@smui/card';\r\n  import clone from 'just-clone';\r\n\r\n  import { components, prevPilingState } from './stores';\r\n\r\n  import { DEFAULT_COMPONENTS_NAMED } from './constants';\r\n\r\n  export let userAndGistId = '';\r\n  export let width = '10rem';\r\n  export let refreshHandler;\r\n\r\n  const { close } = getContext('simple-modal');\r\n\r\n  let title = 'Loading...';\r\n  let thumbnail = '';\r\n  let fileContent = {};\r\n\r\n  const contentParser = ({ output, filename, content }) => output[filename] = content;\r\n  const metadataParser = ({ content, filename }) => {\r\n    try {\r\n      const metadata = JSON.parse(content);\r\n      title = metadata.title || title;\r\n      thumbnail = metadata.thumbnail || thumbnail;\r\n    } catch (e) {\r\n      console.error(`Could not parse metadata (${filename})`)\r\n    }\r\n  }\r\n\r\n  const fileParsers = {\r\n    '_meta.json': metadataParser,\r\n    '_metadata.json': metadataParser,\r\n    '_piling.json': metadataParser,\r\n    '_pilingjs.json': metadataParser,\r\n    'aggregators.js': contentParser,\r\n    'data.js': contentParser,\r\n    'data.json': contentParser,\r\n    'groupArrange.js': contentParser,\r\n    'renderers.js': contentParser,\r\n    'styles.js': contentParser,\r\n  }\r\n\r\n  function parseFiles(files) {\r\n    fileContent = Object.values(files).reduce((output, { filename, content }) => {\r\n      if (fileParsers[filename]) {\r\n        fileParsers[filename]({ output, filename, content });\r\n      }\r\n      return output;\r\n    }, {\r\n      'aggregators.js': '',\r\n      'data.js': '',\r\n      'data.json': '[]',\r\n      'groupArrange.js': '',\r\n      'renderers.js': '',\r\n      'styles.js': ''\r\n    });\r\n  }\r\n\r\n  function loadExample() {\r\n    prevPilingState.set(null);\r\n\r\n    components.update((_components) => {\r\n      _components = [];\r\n\r\n      Object.entries(DEFAULT_COMPONENTS_NAMED).forEach(([name, component]) => {\r\n        const _component = clone(component);\r\n\r\n        if (fileContent[name]) {\r\n          _component.source = fileContent[name];\r\n        }\r\n\r\n        _components.push(_component);\r\n      });\r\n\r\n      return _components;\r\n    });\r\n    // Needs to trigger re-run\r\n    close();\r\n    refreshHandler();\r\n  }\r\n\r\n  $: if (userAndGistId) {\r\n    Promise.all(Object.keys(fileParsers).map(f => {\r\n      return fetch(`https://gist.githubusercontent.com/${userAndGistId}/raw/${f}`)\r\n              .then(async (response) => {\r\n                const content = await response.text();\r\n                return { filename: f, content, status: response.status }\r\n              })\r\n              .catch((error) => {\r\n                return { filename: f, status: 404 }\r\n              })\r\n    }))\r\n    .then((responses) => {\r\n      // parse files that loaded correctly\r\n      parseFiles(responses.filter(({ status }) => status === 200));\r\n    })\r\n    .catch((error) => {\r\n      // something went wrong\r\n      console.warn('Request failed', error);\r\n    });\r\n    \r\n  }\r\n</script>\r\n\r\n<style>\r\n  .example :global(.mdc-card) {\r\n    position: relative;\r\n    box-shadow: none;\r\n  }\r\n\r\n  .example :global(.mdc-card:before) {\r\n    content: '';\r\n    position: absolute;\r\n    z-index: 1;\r\n    display: block;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\r\n    border-radius: 4px;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .example-title {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    padding: 2rem 1rem 1rem 1rem;\r\n    color: white;\r\n    background: linear-gradient(0deg, rgba(0,0,0,0.8) 0%, rgba(0,0,0,0) 100%);\r\n  }\r\n\r\n  .example-title :global(.mdc-typography--headline6) {\r\n    margin: 0;\r\n  }\r\n</style>\r\n\r\n<div class=\"example\">\r\n  <Card style={`width: ${width}`}>\r\n    <PrimaryAction on:click={loadExample}>\r\n      <Media\r\n        style={`background-image: url(${thumbnail});`}\r\n        aspectRatio=\"square\"\r\n      >\r\n        <MediaContent>\r\n          <div class=\"example-title\">\r\n            <h2 class=\"mdc-typography--headline6\">{ title }</h2>\r\n          </div>\r\n        </MediaContent>\r\n      </Media>\r\n    </PrimaryAction>\r\n  </Card>\r\n</div>\r\n",
    "<script>\r\n  import Example from './Example.svelte';\r\n  const booksUserAndGistId = 'flekschas/73dd0de929033ddadb0313fa46257835';\r\n  const ridgePlotUserAndGistId = 'flekschas/81e7fb4f9cf5946f12639c383af97dc6';\r\n  const matrixUserAndGistId = 'flekschas/0bee19015958e5677a1fb476712b3803';\r\n\r\n  export let refreshHandler;\r\n</script>\r\n\r\n<style>\r\n  ol,\r\n  ul {\r\n    padding: 0;\r\n    list-style: none;\r\n  }\r\n\r\n  ol {\r\n    margin: 1rem 0;\r\n  }\r\n\r\n  ul {\r\n    display: grid;\r\n    grid-gap: 1rem;\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n</style>\r\n\r\n<ol>\r\n  <li>\r\n    <h2 class=\"mdc-typography--headline6\">Images / Photos</h2>\r\n    <ul>\r\n      <li>\r\n        <Example userAndGistId={booksUserAndGistId} refreshHandler={refreshHandler} />\r\n      </li>\r\n    </ul>\r\n  </li>\r\n  <li>\r\n    <h2 class=\"mdc-typography--headline6\">Information Visualization</h2>\r\n    <ul>\r\n      <li>\r\n        <Example userAndGistId={ridgePlotUserAndGistId} refreshHandler={refreshHandler} />\r\n      </li>\r\n      <li>\r\n        <Example userAndGistId={matrixUserAndGistId} refreshHandler={refreshHandler} />\r\n      </li>\r\n    </ul>\r\n  </li>\r\n</ol>\r\n",
    "<script>\r\n  import { getContext } from 'svelte';\r\n  import Papa from 'papaparse';\r\n  import Icon from '@smui/textfield/icon/index';\r\n  import Ripple from '@smui/ripple';\r\n  import { readJsonFile } from './utils';\r\n\r\n  import { components } from './stores';\r\n\r\n  export let refreshHandler;\r\n\r\n  let data = JSON.parse($components[1].source || '[]');\r\n  let dragOver = false;\r\n  let files;\r\n  let error;\r\n\r\n  const { close } = getContext('simple-modal');\r\n\r\n  const dragEnterHandler = (event) => {\r\n    dragOver = true;\r\n  };\r\n\r\n  const dragLeaveHandler = () => {\r\n    dragOver = false;\r\n  };\r\n\r\n  const dropHandler = (event) => {\r\n    event.preventDefault();\r\n    error = '';\r\n    dragOver = false;\r\n    files = event.dataTransfer.files;\r\n  };\r\n\r\n  const filesSubmit = () => {\r\n    if (files.length) {\r\n      switch (files[0].type) {\r\n        case 'application/json':\r\n          readJsonFile(files[0])\r\n            .then((newData) => {\r\n              data = newData;\r\n              onSuccess();\r\n            })\r\n            .catch(() => {\r\n              error = 'Invalid JSON file';\r\n            });\r\n          break;\r\n        case 'text/csv':\r\n        case 'text/tab-separated-values':\r\n          Papa.parse(files[0], {\r\n            header: true,\r\n            skipEmptyLines: true,\r\n            complete: (results) => {\r\n              data = results.data;\r\n              onSuccess();\r\n            },\r\n            error: () => {\r\n              error = 'Invalid CSV or TSV file';\r\n            },\r\n          });\r\n          break;\r\n        default:\r\n          error = 'Unsupported file type';\r\n          break;\r\n      }\r\n    } else {\r\n      error = 'Only drop files';\r\n    }\r\n  };\r\n\r\n  $: if (files) {\r\n    filesSubmit(null);\r\n  }\r\n\r\n  const onSuccess = () => {\r\n    components.update((_components) => {\r\n      _components[1].source = JSON.stringify(data, null, 2);\r\n      return _components;\r\n    });\r\n    refreshHandler();\r\n    close();\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .import {\r\n    height: 20rem;\r\n    border: 1px dashed gray;\r\n  }\r\n\r\n  .importForm {\r\n    position: relative;\r\n  }\r\n\r\n  .fileLabel input[type='file'] {\r\n    display: none;\r\n  }\r\n\r\n  .fileLabel {\r\n    border-radius: 0.5rem;\r\n    background: var(--gray-lightest);\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .fileLabel.dragOver {\r\n    background: var(--pink-light);\r\n  }\r\n\r\n  .importForm .error {\r\n    color: #9c273e;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .iconWrapper {\r\n    text-align: center;\r\n  }\r\n\r\n  .fileLabel :global(.addButton) {\r\n    font-size: 3rem;\r\n  }\r\n\r\n  .fileLabel .content {\r\n    margin: auto;\r\n    text-align: center;\r\n  }\r\n\r\n  .drag-leave-layer {\r\n    display: none;\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n\r\n  .dragOver .drag-leave-layer {\r\n    display: block;\r\n  }\r\n</style>\r\n\r\n<div class=\"importForm\">\r\n  {#if error}\r\n    <div class=\"error\">{error}</div>\r\n  {/if}\r\n  <label\r\n    class=\"fileLabel import\"\r\n    class:dragOver\r\n    on:drop={dropHandler}\r\n    on:dragenter={dragEnterHandler}\r\n    ondragOver=\"return false\"\r\n    use:Ripple={{ ripple: true, unbounded: false, color: 'primary' }}>\r\n    <div class=\"content\">\r\n      <input type=\"file\" bind:files />\r\n      <div class=\"iconWrapper\">\r\n        <Icon class=\"material-icons addButton\">add_circle_outline</Icon>\r\n      </div>\r\n      <div>Drag and drop or click to upload data (.csv, .tsv, .json)</div>\r\n    </div>\r\n    <div class=\"drag-leave-layer\" on:dragleave={dragLeaveHandler} />\r\n  </label>\r\n</div>\r\n",
    "<script>\r\n  import Button, { Label } from '@smui/button';\r\n  import List, { Item, Meta, Separator, Text } from '@smui/list';\r\n  import Switch from '@smui/switch';\r\n\r\n  import { autoRun, alwaysPreservePiles } from './stores';\r\n\r\n  import { resetStores } from './utils';\r\n\r\n  export let runHandler;\r\n\r\n  const resetPilingState = () => {\r\n    sessionStorage.setItem(\"resetPilesOnce\", \"true\");\r\n    runHandler();\r\n  }\r\n\r\n  const resetStoresAndReload = () => {\r\n    resetStores();\r\n    window.location.reload();\r\n  };\r\n</script>\r\n\r\n<style>\r\n  h2 {\r\n    margin: 1.5rem 0 .75rem 0;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  h2:first-child {\r\n    margin-top: .5rem;\r\n  }\r\n\r\n  #settings :global(.list) {\r\n    border: 1px solid rgba(0,0,0,.12);\r\n    border-radius: 0.25rem;\r\n  }\r\n</style>\r\n\r\n<div id=\"settings\">\r\n  <h2>Authoring Tool</h2>\r\n  <List class=\"list\" dense nonInteractive>\r\n    <Item ripple={false} class=\"item\">\r\n      <Label>Run automatically on code changes</Label>\r\n      <Meta>\r\n        <Switch bind:checked={$autoRun} color=\"secondary\" />\r\n      </Meta>\r\n    </Item>\r\n    <Separator />\r\n    <Item ripple={false}>\r\n      <Text>App cache</Text>\r\n      <Meta>\r\n        <Button on:click={resetStoresAndReload} color=\"secondary\" dense>\r\n          <Label>Reset</Label>\r\n        </Button>\r\n      </Meta>\r\n    </Item>\r\n  </List>\r\n  <h2>Piling State</h2>\r\n  <List class=\"list\" dense nonInteractive>\r\n    <Item ripple={false}>\r\n      <Text>Preserve piling state on code changes</Text>\r\n      <Meta>\r\n        <Switch bind:checked={$alwaysPreservePiles} on:change={runHandler} color=\"secondary\" />\r\n      </Meta>\r\n    </Item>\r\n    <Separator />\r\n    <Item ripple={false}>\r\n      <Text>Piling state</Text>\r\n      <Meta>\r\n        <Button on:click={resetPilingState} color=\"secondary\" dense>\r\n          <Label>Reset</Label>\r\n        </Button>\r\n      </Meta>\r\n    </Item>\r\n  </List>\r\n</div>\r\n",
    "<script>\r\n  import {\r\n    onMount,\r\n    onDestroy,\r\n    getContext,\r\n    createEventDispatcher,\r\n  } from 'svelte';\r\n  import TopAppBar, { Row, Section, Title } from '@smui/top-app-bar';\r\n  import Fab, { Label, Icon } from '@smui/fab';\r\n  import List, { Item, Text } from '@smui/list';\r\n  import Examples from './Examples.svelte';\r\n  import Import from './Import.svelte';\r\n\r\n  import { tabId } from './stores';\r\n\r\n  import { autoRun, alwaysPreservePiles } from './stores';\r\n\r\n  import { NAV_HEIGHT } from './constants.js';\r\n  import Settings from './Settings.svelte';\r\n\r\n  const { open: openModal } = getContext('simple-modal');\r\n  let exportData;\r\n  let bc;\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  const runHandler = () => dispatch('rebundle');\r\n  const refreshHandler = () => dispatch('refresh');\r\n\r\n  onMount(async () => {\r\n    // Data for Export\r\n    bc = new BroadcastChannel($tabId);\r\n    bc.onmessage = function (m) {\r\n      const json = JSON.parse(m.data.payload);\r\n      delete json.items;\r\n      delete json.piles;\r\n      delete json.temporaryDepiledPiles;\r\n      delete json.magnifiedPiles;\r\n      delete json.focusedPiles;\r\n      delete json.depiledPile;\r\n      exportData = URL.createObjectURL(\r\n        new Blob([...JSON.stringify(json)], {\r\n          type: 'application/json',\r\n        })\r\n      );\r\n    };\r\n  });\r\n\r\n  onDestroy(() => {\r\n    if (bc) bc.close();\r\n    if (exportData) URL.revokeObjectURL(exportData);\r\n  });\r\n\r\n  // Settings Modal\r\n  function openSettingsHandler() {\r\n    openModal(Settings, { runHandler });\r\n  }\r\n\r\n  let dense = true;\r\n  let prominent = false;\r\n  let variant = 'standard';\r\n  let collapsed = false;\r\n  let title = 'Piling.js Authoring';\r\n  let menu;\r\n\r\n  const open = (Component, props = {}, styles = {}) => () =>\r\n    openModal(Component, props, styles);\r\n</script>\r\n\r\n<style>\r\n  .bar :global(.mdc-top-app-bar) {\r\n    background-color: rgb(51, 51, 51);\r\n    color: white;\r\n  }\r\n\r\n  .bar :global(.mdc-fab__label) {\r\n    padding-left: 5px;\r\n    font-size: 10pt;\r\n  }\r\n\r\n  .bar :global(.mdc-fab) {\r\n    width: auto;\r\n    height: 48px;\r\n    padding: 0px 10px;\r\n    border-radius: 0 !important;\r\n    background-color: rgb(51, 51, 51);\r\n    box-shadow: none;\r\n    color: white;\r\n  }\r\n\r\n  .bar :global(.mdc-fab:hover) {\r\n    box-shadow: none;\r\n    background-color: rgb(30, 30, 30);\r\n  }\r\n\r\n  .bar :global(.mdc-fab:disabled) {\r\n    cursor: not-allowed;\r\n    opacity: 0.66;\r\n  }\r\n\r\n  .bar :global(.mdc-fab:disabled:hover) {\r\n    background-color: inherit;\r\n  }\r\n</style>\r\n\r\n<div class=\"bar\" style=\"height: {NAV_HEIGHT};\">\r\n  <TopAppBar {dense} {prominent} {variant} bind:collapsed>\r\n    <Row>\r\n      <Section>\r\n        <span\r\n          class=\"auto-run\"\r\n          title={$autoRun ? 'Auto-run is active. No need to click this button.' : ''}>\r\n          <Fab aria-label=\"Run\" disabled={$autoRun} on:click={runHandler}>\r\n            <Icon class=\"material-icons\" dense={true}>\r\n              {$autoRun ? 'autorenew' : 'play_arrow'}\r\n            </Icon>\r\n            <Label>{$autoRun ? 'Auto-Run' : 'Run'}</Label>\r\n          </Fab>\r\n        </span>\r\n        <Fab\r\n          aria-label=\"Import\"\r\n          on:click={open(Import, { refreshHandler }, { closeButton: false })}>\r\n          <Icon class=\"material-icons\">publish</Icon>\r\n          <Label>Import</Label>\r\n        </Fab>\r\n        <Fab\r\n          aria-label=\"Examples\"\r\n          on:click={open(Examples, { refreshHandler }, { styleWindow: { width: '45rem' } })}>\r\n          <Icon class=\"material-icons\">perm_media</Icon>\r\n          <Label>Examples</Label>\r\n        </Fab>\r\n        <Title>{title}</Title>\r\n      </Section>\r\n      <Section align=\"end\" toolbar>\r\n        <a\r\n          aria-label=\"Export\"\r\n          id=\"export-button\"\r\n          class=\"mdc-fab mdc-ripple-upgraded\"\r\n          style=\"text-decoration: none; font-size: 10pt; --mdc-ripple-fg-size: 52px; --mdc-ripple-fg-scale: 2.097523981797536; --mdc-ripple-fg-translate-start: -3.9666748046875px, -2px; --mdc-ripple-fg-translate-end: 17.333335876464844px, -2px;\"\r\n          href={exportData}\r\n          download=\"piling-settings.json\">\r\n          <Icon class=\"material-icons\">file_download</Icon>\r\n          <Label>Export</Label>\r\n        </a>\r\n        <Fab aria-label=\"Settings\" on:click={openSettingsHandler}>\r\n          <Icon class=\"material-icons\">settings</Icon>\r\n          <Label>Settings</Label>\r\n        </Fab>\r\n      </Section>\r\n    </Row>\r\n  </TopAppBar>\r\n</div>\r\n",
    "<script>\r\n  export let message = 'Warning';\r\n</script>\r\n\r\n<style>\r\n  p {\r\n    color: orange;\r\n  }\r\n</style>\r\n\r\n<p>{message}</p>\r\n",
    "<script context=\"module\">\r\n  import { is_browser } from './env.js';\r\n\r\n  let codemirror_promise;\r\n  let _CodeMirror;\r\n\r\n  if (is_browser) {\r\n    // eslint-ignore-next-line\r\n    codemirror_promise = import('./codemirror.js');\r\n\r\n    codemirror_promise.then((mod) => {\r\n      _CodeMirror = mod.default;\r\n    });\r\n  }\r\n</script>\r\n\r\n<script>\r\n  import { onMount, createEventDispatcher } from 'svelte';\r\n  import Message from './Message.svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let readonly = false;\r\n  export let errorLoc = null;\r\n  export let flex = false;\r\n  export let lineNumbers = true;\r\n  export let tab = true;\r\n\r\n  let w;\r\n  let h;\r\n  let code = '';\r\n  let mode;\r\n\r\n  // We have to expose set and update methods, rather\r\n  // than making this state-driven through props,\r\n  // because it's difficult to update an editor\r\n  // without resetting scroll otherwise\r\n  export async function set(new_code, new_mode) {\r\n    if (new_mode !== mode) {\r\n      await createEditor((mode = new_mode));\r\n    }\r\n\r\n    code = new_code;\r\n    updating_externally = true;\r\n    if (editor) editor.setValue(code);\r\n    updating_externally = false;\r\n  }\r\n\r\n  export function update(new_code) {\r\n    code = new_code;\r\n\r\n    if (editor) {\r\n      const { left, top } = editor.getScrollInfo();\r\n      editor.setValue((code = new_code));\r\n      editor.scrollTo(left, top);\r\n    }\r\n  }\r\n\r\n  export function resize() {\r\n    editor.refresh();\r\n  }\r\n\r\n  export function focus() {\r\n    editor.focus();\r\n  }\r\n\r\n  export function getHistory() {\r\n    return editor.getHistory();\r\n  }\r\n\r\n  export function setHistory(history) {\r\n    editor.setHistory(history);\r\n  }\r\n\r\n  export function clearHistory() {\r\n    if (editor) editor.clearHistory();\r\n  }\r\n\r\n  const modes = {\r\n    js: {\r\n      name: 'javascript',\r\n      json: false,\r\n    },\r\n    json: {\r\n      name: 'javascript',\r\n      json: true,\r\n    },\r\n    svelte: {\r\n      name: 'handlebars',\r\n      base: 'text/html',\r\n    },\r\n    md: {\r\n      name: 'markdown',\r\n    },\r\n  };\r\n\r\n  const refs = {};\r\n  let editor;\r\n  let updating_externally = false;\r\n  let marker;\r\n  let error_line;\r\n  let destroyed = false;\r\n  let CodeMirror;\r\n\r\n  $: if (editor && w && h) {\r\n    editor.refresh();\r\n  }\r\n\r\n  $: {\r\n    if (marker) marker.clear();\r\n\r\n    if (errorLoc) {\r\n      const line = errorLoc.line - 1;\r\n      const ch = errorLoc.column;\r\n\r\n      marker = editor.markText(\r\n        { line, ch },\r\n        { line, ch: ch + 1 },\r\n        {\r\n          className: 'error-loc',\r\n        }\r\n      );\r\n\r\n      error_line = line;\r\n    } else {\r\n      error_line = null;\r\n    }\r\n  }\r\n\r\n  let previous_error_line;\r\n  $: if (editor) {\r\n    if (previous_error_line != null) {\r\n      editor.removeLineClass(previous_error_line, 'wrap', 'error-line');\r\n    }\r\n\r\n    if (error_line && error_line !== previous_error_line) {\r\n      editor.addLineClass(error_line, 'wrap', 'error-line');\r\n      previous_error_line = error_line;\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    (async () => {\r\n      if (!_CodeMirror) {\r\n        let mod = await codemirror_promise;\r\n        CodeMirror = mod.default;\r\n      } else {\r\n        CodeMirror = _CodeMirror;\r\n      }\r\n      await createEditor(mode || 'svelte');\r\n      if (editor) editor.setValue(code || '');\r\n\r\n      dispatch('editorReady');\r\n    })();\r\n\r\n    return () => {\r\n      destroyed = true;\r\n      if (editor) editor.toTextArea();\r\n    };\r\n  });\r\n\r\n  let first = true;\r\n\r\n  async function createEditor(mode) {\r\n    if (destroyed || !CodeMirror) return;\r\n\r\n    if (editor) editor.toTextArea();\r\n\r\n    const opts = {\r\n      lineNumbers,\r\n      lineWrapping: true,\r\n      indentWithTabs: true,\r\n      indentUnit: 2,\r\n      tabSize: 2,\r\n      value: '',\r\n      mode: modes[mode] || {\r\n        name: mode,\r\n      },\r\n      readOnly: readonly,\r\n      autoCloseBrackets: true,\r\n      autoCloseTags: true,\r\n      extraKeys: {\r\n        Enter: 'newlineAndIndentContinueMarkdownList',\r\n        'Ctrl-/': 'toggleComment',\r\n        'Cmd-/': 'toggleComment',\r\n        'Ctrl-Q': function (cm) {\r\n          cm.foldCode(cm.getCursor());\r\n        },\r\n        'Cmd-Q': function (cm) {\r\n          cm.foldCode(cm.getCursor());\r\n        },\r\n      },\r\n      foldGutter: true,\r\n      gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\r\n    };\r\n\r\n    if (!tab) {\r\n      opts.extraKeys['Tab'] = tab;\r\n      opts.extraKeys['Shift-Tab'] = tab;\r\n    }\r\n\r\n    // Creating a text editor is a lot of work, so we yield\r\n    // the main thread for a moment. This helps reduce jank\r\n    if (first) await sleep(50);\r\n\r\n    if (destroyed) return;\r\n\r\n    editor = CodeMirror.fromTextArea(refs.editor, opts);\r\n\r\n    editor.on('change', (instance) => {\r\n      if (!updating_externally) {\r\n        const value = instance.getValue();\r\n        dispatch('change', { value });\r\n      }\r\n    });\r\n\r\n    if (first) await sleep(50);\r\n    editor.refresh();\r\n\r\n    first = false;\r\n  }\r\n\r\n  function sleep(ms) {\r\n    return new Promise((fulfil) => setTimeout(fulfil, ms));\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .codemirror-container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    line-height: 1.5;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .codemirror-container :global(.CodeMirror) {\r\n    height: 100%;\r\n    background: transparent;\r\n    font: 400 14px/1.7 var(--font-mono);\r\n    color: var(--base);\r\n  }\r\n\r\n  .codemirror-container.flex :global(.CodeMirror) {\r\n    height: auto;\r\n  }\r\n\r\n  .codemirror-container.flex :global(.CodeMirror-lines) {\r\n    padding: 0;\r\n  }\r\n\r\n  .codemirror-container :global(.CodeMirror-gutters) {\r\n    padding: 0 16px 0 8px;\r\n    border: none;\r\n  }\r\n\r\n  .codemirror-container :global(.error-loc) {\r\n    position: relative;\r\n    border-bottom: 2px solid #da106e;\r\n  }\r\n\r\n  .codemirror-container :global(.error-line) {\r\n    background-color: rgba(200, 0, 0, 0.05);\r\n  }\r\n\r\n  textarea {\r\n    visibility: hidden;\r\n  }\r\n\r\n  pre {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    border: none;\r\n    padding: 4px 4px 4px 60px;\r\n    resize: none;\r\n    font-family: var(--font-mono);\r\n    font-size: 13px;\r\n    line-height: 1.7;\r\n    user-select: none;\r\n    pointer-events: none;\r\n    color: #ccc;\r\n    tab-size: 2;\r\n    -moz-tab-size: 2;\r\n  }\r\n\r\n  .flex pre {\r\n    padding: 0 0 0 4px;\r\n    height: auto;\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"codemirror-container\"\r\n  class:flex\r\n  bind:offsetWidth={w}\r\n  bind:offsetHeight={h}>\r\n  <!-- svelte-ignore a11y-positive-tabindex -->\r\n  <textarea tabindex=\"2\" bind:this={refs.editor} readonly value={code} />\r\n\r\n  {#if !CodeMirror}\r\n    <pre style=\"position: absolute; left: 0; top: 0\">{code}</pre>\r\n\r\n    <div style=\"position: absolute; width: 100%; bottom: 0\">\r\n      <Message kind=\"info\">loading editor...</Message>\r\n    </div>\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { getContext } from 'svelte';\r\n  import { DEFAULT_COMPONENTS_NAMED, DEFAULT_DATA_NAME, DEFAULT_DATA_TYPE } from '../../constants.js';\r\n\r\n  export let handle_select;\r\n  export let handle_data_select;\r\n\r\n  function handleAnySelect(component) {\r\n    handle_select(component);\r\n    if (component.name === DEFAULT_DATA_NAME) {\r\n      handle_data_select();\r\n    }\r\n  }\r\n\r\n  const { components, selected, request_focus, rebundle } = getContext('REPL');\r\n\r\n  let editing = null;\r\n\r\n  const cleanTitle = title => {\r\n    return title.split('-')\r\n      .map(w => w[0].toUpperCase() + w.substr(1).toLowerCase())\r\n      .join(' ')\r\n  }\r\n\r\n  function selectComponent(component) {\r\n    if ($selected !== component) {\r\n      editing = null;\r\n      handleAnySelect(component);\r\n    }\r\n  }\r\n\r\n  function editTab(component) {\r\n    if ($selected === component) {\r\n      editing = $selected;\r\n    }\r\n  }\r\n\r\n  function closeEdit() {\r\n    const match = /(.+)\\.(svelte|js|json|md)$/.exec($selected.name);\r\n    $selected.name = match ? match[1] : $selected.name;\r\n    if (isComponentNameUsed($selected)) {\r\n      let i = 1;\r\n      let name = $selected.name;\r\n      do {\r\n        $selected.name = `${name}_${i++}`;\r\n      } while (isComponentNameUsed($selected));\r\n    }\r\n    if (match && match[2]) $selected.type = match[2];\r\n\r\n    editing = null;\r\n\r\n    // re-select, in case the type changed\r\n    handleAnySelect($selected);\r\n\r\n    components = components; // TODO necessary?\r\n\r\n    // focus the editor, but wait a beat (so key events aren't misdirected)\r\n    setTimeout(request_focus);\r\n\r\n    rebundle();\r\n  }\r\n\r\n  function remove(component) {\r\n    let result = confirm(\r\n      `Are you sure you want to delete ${component.name}.${component.type}?`\r\n    );\r\n\r\n    if (result) {\r\n      const index = $components.indexOf(component);\r\n\r\n      if (~index) {\r\n        components.set(\r\n          $components.slice(0, index).concat($components.slice(index + 1))\r\n        );\r\n      } else {\r\n        console.error(`Could not find component! That's... odd`);\r\n      }\r\n\r\n      handleAnySelect($components[index] || $components[$components.length - 1]);\r\n    }\r\n  }\r\n\r\n  function selectInput(event) {\r\n    setTimeout(() => {\r\n      event.target.select();\r\n    });\r\n  }\r\n\r\n  let uid = 1;\r\n\r\n  function addNew() {\r\n    const component = {\r\n      name: uid++ ? `Component${uid}` : 'Component1',\r\n      type: 'svelte',\r\n      source: '',\r\n    };\r\n\r\n    editing = component;\r\n\r\n    setTimeout(() => {\r\n      // TODO we can do this without IDs\r\n      document.getElementById(component.name).scrollIntoView(false);\r\n    });\r\n\r\n    components.update((components) => components.concat(component));\r\n    handleAnySelect(component);\r\n  }\r\n\r\n  function isComponentNameUsed(editing) {\r\n    return $components.find(\r\n      (component) => component !== editing && component.name === editing.name\r\n    );\r\n  }\r\n\r\n  // drag and drop\r\n  let from = null;\r\n  let over = null;\r\n\r\n  function dragStart(event) {\r\n    from = event.currentTarget.id;\r\n  }\r\n\r\n  function dragLeave() {\r\n    over = null;\r\n  }\r\n\r\n  function dragOver(event) {\r\n    event.preventDefault();\r\n    over = event.currentTarget.id;\r\n  }\r\n\r\n  function dragEnd(event) {\r\n    event.preventDefault();\r\n\r\n    if (from && over) {\r\n      const from_index = $components.findIndex(\r\n        (component) => component.name === from\r\n      );\r\n      const to_index = $components.findIndex(\r\n        (component) => component.name === over\r\n      );\r\n\r\n      const from_component = $components[from_index];\r\n\r\n      $components.splice(from_index, 1);\r\n      components.set(\r\n        $components\r\n          .slice(0, to_index)\r\n          .concat(from_component)\r\n          .concat($components.slice(to_index))\r\n      );\r\n    }\r\n    from = over = null;\r\n  }\r\n\r\n  const isRequired = (component) => {\r\n    return Object.keys(DEFAULT_COMPONENTS_NAMED).includes(component.name + '.' + component.type) && component !== editing\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .component-selector {\r\n    position: relative;\r\n    border-bottom: 1px solid #eee;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .file-tabs {\r\n    border: none;\r\n    margin: 0;\r\n    white-space: nowrap;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n    height: 10em;\r\n  }\r\n\r\n  .file-tabs .button,\r\n  .file-tabs button {\r\n    position: relative;\r\n    display: inline-block;\r\n    font: 400 12px/1.5 var(--font);\r\n    background: white;\r\n    border: none;\r\n    border-bottom: 3px solid transparent;\r\n    padding: 12px 14px 8px 16px;\r\n    margin: 0;\r\n    color: #999;\r\n    border-radius: 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .file-tabs .button.active {\r\n    /* color: var(--second); */\r\n    color: #333;\r\n    border-bottom: 3px solid var(--prime);\r\n  }\r\n\r\n  .editable,\r\n  .uneditable,\r\n  .input-sizer,\r\n  input {\r\n    display: inline-block;\r\n    position: relative;\r\n    line-height: 1;\r\n  }\r\n\r\n  .input-sizer {\r\n    color: #ccc;\r\n    left: 0;\r\n    top: 0;\r\n  }\r\n\r\n  input {\r\n    position: absolute;\r\n    width: 100%;\r\n    left: 11px;\r\n    top: 7px;\r\n    font: 400 12px/1.5 var(--font);\r\n    border: none;\r\n    color: var(--flash);\r\n    outline: none;\r\n    background-color: transparent;\r\n  }\r\n\r\n  .duplicate {\r\n    color: var(--prime);\r\n  }\r\n\r\n  .remove {\r\n    position: absolute;\r\n    display: none;\r\n    right: 1px;\r\n    top: 4px;\r\n    width: 16px;\r\n    text-align: right;\r\n    padding: 12px 0 12px 5px;\r\n    font-size: 8px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .remove:hover {\r\n    color: var(--flash);\r\n  }\r\n\r\n  .file-tabs .button.active .editable {\r\n    cursor: text;\r\n  }\r\n\r\n  .file-tabs .button.active .remove {\r\n    display: block;\r\n  }\r\n\r\n  .file-tabs .button.drag-over {\r\n    background: #67677814;\r\n  }\r\n\r\n  .file-tabs .button.drag-over {\r\n    cursor: move;\r\n  }\r\n\r\n  .add-new {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    padding: 12px 10px 8px 0 !important;\r\n    height: 40px;\r\n    text-align: center;\r\n    background-color: white;\r\n  }\r\n\r\n  .add-new:hover {\r\n    color: var(--flash) !important;\r\n  }\r\n\r\n  .drag-handle {\r\n    cursor: move;\r\n    width: 5px;\r\n    height: 25px;\r\n    position: absolute;\r\n    left: 5px;\r\n    top: 9px;\r\n    --drag-handle-color: #dedede;\r\n    background: linear-gradient(\r\n      to right,\r\n      var(--drag-handle-color) 1px,\r\n      white 1px,\r\n      white 2px,\r\n      var(--drag-handle-color) 2px,\r\n      var(--drag-handle-color) 3px,\r\n      white 3px,\r\n      white 4px,\r\n      var(--drag-handle-color) 4px\r\n    );\r\n  }\r\n\r\n  svg {\r\n    position: relative;\r\n    overflow: hidden;\r\n    vertical-align: middle;\r\n    -o-object-fit: contain;\r\n    object-fit: contain;\r\n    -webkit-transform-origin: center center;\r\n    transform-origin: center center;\r\n\r\n    stroke: currentColor;\r\n    stroke-width: 2;\r\n    stroke-linecap: round;\r\n    stroke-linejoin: round;\r\n    fill: none;\r\n  }\r\n</style>\r\n\r\n<div class=\"component-selector\">\r\n  {#if $components.length}\r\n    <div class=\"file-tabs\" on:dblclick={addNew}>\r\n      {#each $components as component, index}\r\n        {#if !(component.name === DEFAULT_DATA_NAME && component.type === DEFAULT_DATA_TYPE)}\r\n          <div\r\n            id={component.name}\r\n            class=\"button\"\r\n            role=\"button\"\r\n            class:active={component === $selected}\r\n            class:draggable={component !== editing && index !== 0}\r\n            class:drag-over={over === component.name}\r\n            on:click={() => selectComponent(component)}\r\n            on:dblclick={(e) => e.stopPropagation()}\r\n            draggable={component !== editing && !isRequired(component)}\r\n            on:dragstart={dragStart}\r\n            on:dragover={dragOver}\r\n            on:dragleave={dragLeave}\r\n            on:drop={dragEnd}>\r\n            {#if !isRequired(component)}\r\n            <i class=\"drag-handle\" />\r\n            {/if}\r\n            {#if isRequired(component)}\r\n              <div class=\"uneditable\">{cleanTitle(component.name)}</div>\r\n            {:else if component === editing}\r\n              <span class=\"input-sizer\">\r\n                {editing.name + (/\\./.test(editing.name) ? '' : `.${editing.type}`)}\r\n              </span>\r\n\r\n              <!-- svelte-ignore a11y-autofocus -->\r\n              <input\r\n                autofocus\r\n                spellcheck={false}\r\n                bind:value={editing.name}\r\n                on:focus={selectInput}\r\n                on:blur={closeEdit}\r\n                on:keydown={(e) => e.which === 13 && !isComponentNameUsed(editing) && e.target.blur()}\r\n                class:duplicate={isComponentNameUsed(editing)} />\r\n            {:else}\r\n              <div\r\n                class=\"editable\"\r\n                title=\"edit component name\"\r\n                on:click={() => editTab(component)}>\r\n                {cleanTitle(component.name)}\r\n              </div>\r\n\r\n              <span class=\"remove\" on:click={() => remove(component)}>\r\n                <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\">\r\n                  <line stroke=\"#999\" x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\" />\r\n                  <line stroke=\"#999\" x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\" />\r\n                </svg>\r\n              </span>\r\n            {/if}\r\n          </div>\r\n        {/if}\r\n      {/each}\r\n\r\n      <button class=\"add-new\" on:click={addNew} title=\"add new component\">\r\n        <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\">\r\n          <line stroke=\"#999\" x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\" />\r\n          <line stroke=\"#999\" x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { getContext, onMount } from 'svelte';\r\n  import CodeMirror from '../CodeMirror.svelte';\r\n  import Message from '../Message.svelte';\r\n\r\n  const {\r\n    bundle,\r\n    selected,\r\n    handle_change,\r\n    register_module_editor,\r\n  } = getContext('REPL');\r\n\r\n  export let errorLoc;\r\n  export let handle_select;\r\n\r\n  let editor;\r\n  onMount(() => {\r\n    register_module_editor(editor);\r\n  });\r\n\r\n  export function focus() {\r\n    editor.focus();\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .editor-wrapper {\r\n    z-index: 5;\r\n    background: var(--back-light);\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1 1 auto;\r\n  }\r\n\r\n  .editor {\r\n    height: 0;\r\n    flex: 1 1 auto;\r\n  }\r\n\r\n  .info {\r\n    background-color: var(--second);\r\n    max-height: 50%;\r\n    overflow: auto;\r\n  }\r\n\r\n  :global(.columns) .editor-wrapper {\r\n    /* make it easier to interact with scrollbar */\r\n    padding-right: 8px;\r\n    height: auto;\r\n    /* height: 100%; */\r\n  }\r\n</style>\r\n\r\n<div class=\"editor-wrapper\">\r\n  <div class=\"editor notranslate\" translate=\"no\">\r\n    <CodeMirror bind:this={editor} {errorLoc} on:change={handle_change} />\r\n  </div>\r\n\r\n  <div class=\"info\">\r\n    {#if $bundle}\r\n      {#if $bundle.error}\r\n        <Message\r\n          kind=\"error\"\r\n          details={$bundle.error}\r\n          filename=\"{$selected.name}.{$selected.type}\" />\r\n      {:else if $bundle.warnings.length > 0}\r\n        {#each $bundle.warnings as warning}\r\n          <Message\r\n            kind=\"warning\"\r\n            details={warning}\r\n            filename=\"{$selected.name}.{$selected.type}\" />\r\n        {/each}\r\n      {/if}\r\n    {/if}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { getContext } from 'svelte';\r\n  import { slide } from 'svelte/transition';\r\n\r\n  const { navigate } = getContext('REPL');\r\n\r\n  export let kind;\r\n  export let details = null;\r\n  export let filename = null;\r\n  export let truncate;\r\n\r\n  function message(details) {\r\n    let str = details.message || '[missing message]';\r\n\r\n    let loc = [];\r\n\r\n    if (details.filename && details.filename !== filename) {\r\n      loc.push(details.filename);\r\n    }\r\n\r\n    if (details.start) loc.push(details.start.line, details.start.column);\r\n\r\n    return str + (loc.length ? ` (${loc.join(':')})` : ``);\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .message {\r\n    position: relative;\r\n    color: white;\r\n    padding: 12px 16px 12px 44px;\r\n    font: 400 12px/1.7 var(--font);\r\n    margin: 0;\r\n    border-top: 1px solid white;\r\n  }\r\n\r\n  .navigable {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .message::before {\r\n    content: '!';\r\n    position: absolute;\r\n    left: 12px;\r\n    top: 10px;\r\n    text-align: center;\r\n    line-height: 1;\r\n    padding: 4px;\r\n    border-radius: 50%;\r\n    color: white;\r\n    border: 2px solid white;\r\n    box-sizing: content-box;\r\n    width: 10px;\r\n    height: 10px;\r\n    font-size: 11px;\r\n    font-weight: 700;\r\n  }\r\n\r\n  .truncate {\r\n    white-space: pre;\r\n    overflow-x: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .error {\r\n    background-color: #da106e;\r\n  }\r\n\r\n  .warning {\r\n    background-color: #e47e0a;\r\n  }\r\n\r\n  .info {\r\n    background-color: var(--second);\r\n  }\r\n</style>\r\n\r\n<div\r\n  in:slide={{ delay: 150, duration: 100 }}\r\n  out:slide={{ duration: 100 }}\r\n  class=\"message {kind}\"\r\n  class:truncate>\r\n  {#if details}\r\n    <p class:navigable={details.filename} on:click={() => navigate(details)}>\r\n      {message(details)}\r\n    </p>\r\n  {:else}\r\n    <slot />\r\n  {/if}\r\n</div>\r\n",
    "<script>\r\n  import { getContext } from 'svelte';\r\n\r\n  const { compile_options } = getContext('REPL');\r\n</script>\r\n\r\n<style>\r\n  .options {\r\n    padding: 0 10px;\r\n    font-family: var(--font-mono);\r\n    font-size: 13px;\r\n    color: #999;\r\n    line-height: 1.8;\r\n  }\r\n\r\n  .option {\r\n    display: block;\r\n    padding: 0 0 0 1.25em;\r\n    white-space: nowrap;\r\n    color: #333;\r\n    user-select: none;\r\n  }\r\n\r\n  .key {\r\n    display: inline-block;\r\n    width: 9em;\r\n  }\r\n\r\n  .string {\r\n    color: hsl(41, 37%, 45%);\r\n  }\r\n\r\n  .boolean {\r\n    color: hsl(45, 7%, 45%);\r\n  }\r\n\r\n  label {\r\n    display: inline-block;\r\n  }\r\n\r\n  label[for] {\r\n    color: var(--string);\r\n  }\r\n\r\n  input[type='checkbox'] {\r\n    top: -1px;\r\n  }\r\n\r\n  input[type='radio'] {\r\n    position: absolute;\r\n    top: auto;\r\n    overflow: hidden;\r\n    clip: rect(1px, 1px, 1px, 1px);\r\n    width: 1px;\r\n    height: 1px;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  input[type='radio'] + label {\r\n    padding: 0 0 0 1.6em;\r\n    margin: 0 0.6em 0 0;\r\n    opacity: 0.7;\r\n  }\r\n\r\n  input[type='radio']:checked + label {\r\n    opacity: 1;\r\n  }\r\n\r\n  /* input[type=radio]:focus + label {\r\n\t\tcolor: #00f;\r\n\t\toutline: 1px dotted #00f;\r\n\t} */\r\n\r\n  input[type='radio'] + label:before {\r\n    content: '';\r\n    background: #eee;\r\n    display: block;\r\n    box-sizing: border-box;\r\n    float: left;\r\n    width: 15px;\r\n    height: 15px;\r\n    margin-left: -21px;\r\n    margin-top: 4px;\r\n    vertical-align: top;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    transition: box-shadow 0.1s ease-out;\r\n  }\r\n\r\n  input[type='radio'] + label:before {\r\n    background-color: var(--second);\r\n    border-radius: 100%;\r\n    box-shadow: inset 0 0 0 0.5em rgba(255, 255, 255, 0.95);\r\n    border: 1px solid var(--second);\r\n  }\r\n\r\n  input[type='radio']:checked + label:before {\r\n    background-color: var(--prime);\r\n    box-shadow: inset 0 0 0 0.15em rgba(255, 255, 255, 0.95);\r\n    border: 1px solid var(--second);\r\n    transition: box-shadow 0.2s ease-out;\r\n  }\r\n</style>\r\n\r\n<div class=\"options\">\r\n  result = svelte.compile(source, &#123;\r\n  <div class=\"option\">\r\n    <span class=\"key\">generate:</span>\r\n\r\n    <input\r\n      id=\"dom-input\"\r\n      type=\"radio\"\r\n      bind:group={$compile_options.generate}\r\n      value=\"dom\" />\r\n    <label for=\"dom-input\">\r\n      <span class=\"string\">\"dom\"</span>\r\n    </label>\r\n\r\n    <input\r\n      id=\"ssr-input\"\r\n      type=\"radio\"\r\n      bind:group={$compile_options.generate}\r\n      value=\"ssr\" />\r\n    <label for=\"ssr-input\">\r\n      <span class=\"string\">\"ssr\"</span>\r\n      ,\r\n    </label>\r\n  </div>\r\n\r\n  <label class=\"option\">\r\n    <span class=\"key\">dev:</span>\r\n    <input type=\"checkbox\" bind:checked={$compile_options.dev} />\r\n    <span class=\"boolean\">{$compile_options.dev}</span>\r\n    ,\r\n  </label>\r\n\r\n  <label class=\"option\">\r\n    <span class=\"key\">css:</span>\r\n    <input type=\"checkbox\" bind:checked={$compile_options.css} />\r\n    <span class=\"boolean\">{$compile_options.css}</span>\r\n    ,\r\n  </label>\r\n\r\n  <label class=\"option\">\r\n    <span class=\"key\">hydratable:</span>\r\n    <input type=\"checkbox\" bind:checked={$compile_options.hydratable} />\r\n    <span class=\"boolean\">{$compile_options.hydratable}</span>\r\n    ,\r\n  </label>\r\n\r\n  <label class=\"option\">\r\n    <span class=\"key\">customElement:</span>\r\n    <input type=\"checkbox\" bind:checked={$compile_options.customElement} />\r\n    <span class=\"boolean\">{$compile_options.customElement}</span>\r\n    ,\r\n  </label>\r\n\r\n  <label class=\"option\">\r\n    <span class=\"key\">immutable:</span>\r\n    <input type=\"checkbox\" bind:checked={$compile_options.immutable} />\r\n    <span class=\"boolean\">{$compile_options.immutable}</span>\r\n    ,\r\n  </label>\r\n\r\n  <label class=\"option\">\r\n    <span class=\"key\">legacy:</span>\r\n    <input type=\"checkbox\" bind:checked={$compile_options.legacy} />\r\n    <span class=\"boolean\">{$compile_options.legacy}</span>\r\n  </label>\r\n  });\r\n</div>\r\n",
    "<script>\r\n  import JSONNode from 'svelte-json-tree';\r\n  import ConsoleTable from './ConsoleTable.svelte';\r\n\r\n  export let log;\r\n  export let level = 1;\r\n\r\n  function toggleGroupCollapse() {\r\n    log.collapsed = !log.collapsed;\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .log {\r\n    border-bottom: 1px solid #eee;\r\n    padding: 5px 10px 0px;\r\n    display: flex;\r\n    position: relative;\r\n    font-size: 12px;\r\n    font-family: var(--font-mono);\r\n  }\r\n\r\n  .log > :global(*) {\r\n    margin-right: 10px;\r\n    font-family: var(--font-mono);\r\n  }\r\n\r\n  .console-warn,\r\n  .console-system-warn {\r\n    background: #fffbe6;\r\n    border-color: #fff4c4;\r\n  }\r\n\r\n  .console-error,\r\n  .console-assert {\r\n    background: #fff0f0;\r\n    border-color: #fed6d7;\r\n  }\r\n\r\n  .console-group,\r\n  .arrow {\r\n    cursor: pointer;\r\n    user-select: none;\r\n  }\r\n\r\n  .console-trace,\r\n  .console-assert {\r\n    border-bottom: none;\r\n  }\r\n\r\n  .console-assert + .trace {\r\n    background: #fff0f0;\r\n    border-color: #fed6d7;\r\n  }\r\n\r\n  .trace {\r\n    border-bottom: 1px solid #eee;\r\n    font-size: 12px;\r\n    font-family: var(--font-mono);\r\n    padding: 4px 0 2px;\r\n  }\r\n\r\n  .trace > :global(div) {\r\n    margin-left: 15px;\r\n  }\r\n\r\n  .count {\r\n    color: #999;\r\n    font-size: 12px;\r\n    line-height: 1.2;\r\n  }\r\n\r\n  .info {\r\n    color: #666;\r\n    font-family: var(--font) !important;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .error {\r\n    color: #da106e; /* todo make this a var */\r\n  }\r\n\r\n  .outline {\r\n    border-left: 1px solid #9c9cab;\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: -1px;\r\n  }\r\n\r\n  .arrow {\r\n    position: absolute;\r\n    font-size: 0.6em;\r\n    transition: 150ms;\r\n    transform-origin: 50% 50%;\r\n    transform: translateY(1px) translateX(-50%);\r\n  }\r\n\r\n  .arrow.expand {\r\n    transform: translateY(1px) translateX(-50%) rotateZ(90deg);\r\n  }\r\n\r\n  .title {\r\n    font-family: var(--font-mono);\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    padding-left: 11px;\r\n    height: 19px;\r\n  }\r\n\r\n  .assert {\r\n    padding-left: 11px;\r\n    font-weight: bold;\r\n    color: #da106e;\r\n  }\r\n</style>\r\n\r\n{#if log.level === 'table'}\r\n  <ConsoleTable data={log.args[0]} columns={log.args[1]} />\r\n{/if}\r\n\r\n<div\r\n  class=\"log console-{log.level}\"\r\n  style=\"padding-left: {level * 15}px\"\r\n  on:click={log.level === 'group' ? toggleGroupCollapse : undefined}>\r\n  {#if log.count > 1}\r\n    <span class=\"count\">{log.count}x</span>\r\n  {/if}\r\n\r\n  {#if log.level === 'trace' || log.level === 'assert'}\r\n    <div\r\n      class=\"arrow\"\r\n      class:expand={!log.collapsed}\r\n      on:click={toggleGroupCollapse}>\r\n      ▶\r\n    </div>\r\n  {/if}\r\n\r\n  {#if log.level === 'assert'}\r\n    <span class=\"assert\">Assertion failed:</span>\r\n  {/if}\r\n\r\n  {#if log.level === 'clear'}\r\n    <span class=\"info\">Console was cleared</span>\r\n  {:else if log.level === 'unclonable'}\r\n    <span class=\"info error\">\r\n      Message could not be cloned. Open devtools to see it\r\n    </span>\r\n  {:else if log.level === 'group'}\r\n    <div class=\"arrow\" class:expand={!log.collapsed}>▶</div>\r\n    <span class=\"title\">{log.label}</span>\r\n  {:else if log.level.startsWith('system')}\r\n    {#each log.args as arg}{arg}{/each}\r\n  {:else if log.level === 'table'}\r\n    <JSONNode value={log.args[0]} />\r\n  {:else}\r\n    {#each log.args as arg}\r\n      <JSONNode value={arg} />\r\n    {/each}\r\n  {/if}\r\n  {#each new Array(level - 1) as _, idx}\r\n    <div class=\"outline\" style=\"left: {idx * 15 + 15}px\" />\r\n  {/each}\r\n</div>\r\n\r\n{#if log.level === 'group' && !log.collapsed}\r\n  {#each log.logs as childLog}\r\n    <svelte:self log={childLog} level={level + 1} />\r\n  {/each}\r\n{/if}\r\n\r\n{#if (log.level === 'trace' || log.level === 'assert') && !log.collapsed}\r\n  <div class=\"trace\">\r\n    {#each log.stack.split('\\n').slice(2) as stack}\r\n      <div>{stack.replace(/^\\s*at\\s+/, '')}</div>\r\n    {/each}\r\n  </div>\r\n{/if}\r\n",
    "<script>\r\n  import JSONNode from 'svelte-json-tree';\r\n\r\n  export let data;\r\n  export let columns;\r\n\r\n  const INDEX_KEY = '(index)';\r\n  const VALUE_KEY = 'Value';\r\n\r\n  $: keys = Object.keys(data);\r\n  $: columns_to_render = columns || get_columns_to_render(data, keys);\r\n\r\n  function get_columns_to_render(data, keys) {\r\n    const columns = new Set([INDEX_KEY]);\r\n    for (const key of keys) {\r\n      const value = data[key];\r\n      if (typeof value === 'object') {\r\n        Object.keys(value).forEach((key) => columns.add(key));\r\n      } else {\r\n        columns.add(VALUE_KEY);\r\n      }\r\n    }\r\n\r\n    return [...columns];\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .table {\r\n    margin: 8px;\r\n    overflow: auto;\r\n    max-height: 200px;\r\n  }\r\n  table {\r\n    font-size: 12px;\r\n    font-family: var(--font-mono);\r\n    border-collapse: collapse;\r\n    line-height: 1;\r\n    border: 1px solid #aaa;\r\n  }\r\n  th {\r\n    background: #f3f3f3;\r\n    padding: 4px 8px;\r\n    border: 1px solid #aaa;\r\n    position: sticky;\r\n    top: 0;\r\n  }\r\n  td {\r\n    padding: 2px 8px;\r\n  }\r\n  tr:nth-child(2n) {\r\n    background: #f2f7fd;\r\n  }\r\n  th,\r\n  td {\r\n    border-right: 1px solid #aaa;\r\n  }\r\n</style>\r\n\r\n<div class=\"table\">\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        {#each columns_to_render as column}\r\n          <th>{column}</th>\r\n        {/each}\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {#each keys as key}\r\n        <tr>\r\n          {#each columns_to_render as column}\r\n            {#if column === INDEX_KEY}\r\n              <td>{key}</td>\r\n            {:else if column === VALUE_KEY}\r\n              <td>\r\n                <JSONNode value={data[key]} />\r\n              </td>\r\n            {:else if column in data[key]}\r\n              <td>\r\n                <JSONNode value={data[key][column]} />\r\n              </td>\r\n            {:else}\r\n              <td />\r\n            {/if}\r\n          {/each}\r\n        </tr>\r\n      {/each}\r\n    </tbody>\r\n  </table>\r\n</div>\r\n",
    "<script>\r\n  import { spring } from 'svelte/motion';\r\n  import SplitPane from '../SplitPane.svelte';\r\n\r\n  export let panel;\r\n  export let pos = 50;\r\n  let previous_pos = Math.min(pos, 70);\r\n\r\n  let max;\r\n\r\n  // we can't bind to the spring itself, but we\r\n  // can still use the spring to drive `pos`\r\n  const driver = spring(pos);\r\n  $: pos = $driver;\r\n\r\n  const toggle = () => {\r\n    driver.set(pos, { hard: true });\r\n\r\n    if (pos > 80) {\r\n      driver.set(previous_pos);\r\n    } else {\r\n      previous_pos = pos;\r\n      driver.set(max);\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .panel-header {\r\n    height: 42px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .panel-body {\r\n    overflow: auto;\r\n  }\r\n\r\n  h3 {\r\n    font: 700 12px/1.5 var(--font);\r\n    color: #333;\r\n  }\r\n\r\n  section {\r\n    overflow: hidden;\r\n  }\r\n</style>\r\n\r\n<SplitPane bind:max type=\"vertical\" bind:pos>\r\n  <section slot=\"a\">\r\n    <slot name=\"main\" />\r\n  </section>\r\n\r\n  <section slot=\"b\">\r\n    <div class=\"panel-header\" on:click={toggle}>\r\n      <h3>{panel}</h3>\r\n      <slot name=\"panel-header\" />\r\n    </div>\r\n\r\n    <div class=\"panel-body\">\r\n      <slot name=\"panel-body\" />\r\n    </div>\r\n  </section>\r\n</SplitPane>\r\n",
    "<script>\r\n  import { onMount, getContext } from 'svelte';\r\n  import getLocationFromStack from './getLocationFromStack.js';\r\n  import SplitPane from '../SplitPane.svelte';\r\n  import PaneWithPanel from './PaneWithPanel.svelte';\r\n  import ReplProxy from './ReplProxy.js';\r\n  import Console from './Console.svelte';\r\n  import Message from '../Message.svelte';\r\n  import srcdoc from './srcdoc/index.js';\r\n\r\n  const { bundle } = getContext('REPL');\r\n\r\n  export let error; // TODO should this be exposed as a prop?\r\n  let logs = [];\r\n  let log_group_stack = [];\r\n  let current_log_group = logs;\r\n\r\n  export function setProp(prop, value) {\r\n    if (!proxy) return;\r\n    proxy.setProp(prop, value);\r\n  }\r\n\r\n  export let status;\r\n  export let relaxed = false;\r\n  export let injectedJS = '';\r\n  export let injectedCSS = '';\r\n\r\n  let iframe;\r\n  let pending_imports = 0;\r\n  let pending = false;\r\n\r\n  let proxy = null;\r\n\r\n  let ready = false;\r\n  let inited = false;\r\n\r\n  let log_height = 90;\r\n  let prev_height;\r\n\r\n  let last_console_event;\r\n\r\n  onMount(() => {\r\n    proxy = new ReplProxy(iframe, {\r\n      on_fetch_progress: (progress) => {\r\n        pending_imports = progress;\r\n      },\r\n      on_error: (event) => {\r\n        push_logs({ level: 'error', args: [event.value] });\r\n      },\r\n      on_unhandled_rejection: (event) => {\r\n        let error = event.value;\r\n        if (typeof error === 'string') error = { message: error };\r\n        error.message = 'Uncaught (in promise): ' + error.message;\r\n        push_logs({ level: 'error', args: [error] });\r\n      },\r\n      on_console: (log) => {\r\n        if (log.level === 'clear') {\r\n          clear_logs();\r\n          push_logs(log);\r\n        } else if (log.duplicate) {\r\n          increment_duplicate_log();\r\n        } else {\r\n          push_logs(log);\r\n        }\r\n      },\r\n      on_console_group: (action) => {\r\n        group_logs(action.label, false);\r\n      },\r\n      on_console_group_end: () => {\r\n        ungroup_logs();\r\n      },\r\n      on_console_group_collapsed: (action) => {\r\n        group_logs(action.label, true);\r\n      },\r\n    });\r\n\r\n    iframe.addEventListener('load', () => {\r\n      proxy.handle_links();\r\n      ready = true;\r\n    });\r\n\r\n    return () => {\r\n      proxy.destroy();\r\n    };\r\n  });\r\n\r\n  async function apply_bundle($bundle) {\r\n    if (!$bundle || $bundle.error) return;\r\n\r\n    try {\r\n      clear_logs();\r\n\r\n      await proxy.eval(`\r\n\t\t\t\t${injectedJS}\r\n\r\n\t\t\t\t${styles}\r\n\r\n\t\t\t\tconst styles = document.querySelectorAll('style[id^=svelte-]');\r\n\r\n\t\t\t\t${$bundle.dom.code}\r\n\r\n\t\t\t\tlet i = styles.length;\r\n\t\t\t\twhile (i--) styles[i].parentNode.removeChild(styles[i]);\r\n\r\n\t\t\t\tif (window.component) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\twindow.component.$destroy();\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdocument.body.innerHTML = '';\r\n\t\t\t\twindow.location.hash = '';\r\n\t\t\t\twindow._svelteTransitionManager = null;\r\n\r\n\t\t\t\twindow.component = new SvelteComponent.default({\r\n\t\t\t\t\ttarget: document.body\r\n\t\t\t\t});\r\n\t\t\t`);\r\n\r\n      error = null;\r\n    } catch (e) {\r\n      show_error(e);\r\n    }\r\n\r\n    inited = true;\r\n  }\r\n\r\n  $: if (ready) apply_bundle($bundle);\r\n\r\n  $: styles =\r\n    injectedCSS &&\r\n    `{\r\n\t\tconst style = document.createElement('style');\r\n\t\tstyle.textContent = ${JSON.stringify(injectedCSS)};\r\n\t\tdocument.head.appendChild(style);\r\n\t}`;\r\n\r\n  function show_error(e) {\r\n    const loc = getLocationFromStack(e.stack, $bundle.dom.map);\r\n    if (loc) {\r\n      e.filename = loc.source;\r\n      e.loc = { line: loc.line, column: loc.column };\r\n    }\r\n\r\n    error = e;\r\n  }\r\n\r\n  function push_logs(log) {\r\n    current_log_group.push((last_console_event = log));\r\n    logs = logs;\r\n  }\r\n\r\n  function group_logs(label, collapsed) {\r\n    const group_log = { level: 'group', label, collapsed, logs: [] };\r\n    current_log_group.push(group_log);\r\n    log_group_stack.push(current_log_group);\r\n    current_log_group = group_log.logs;\r\n    logs = logs;\r\n  }\r\n\r\n  function ungroup_logs() {\r\n    current_log_group = log_group_stack.pop();\r\n  }\r\n\r\n  function increment_duplicate_log() {\r\n    const last_log = current_log_group[current_log_group.length - 1];\r\n\r\n    if (last_log) {\r\n      last_log.count = (last_log.count || 1) + 1;\r\n      logs = logs;\r\n    } else {\r\n      last_console_event.count = 1;\r\n      push_logs(last_console_event);\r\n    }\r\n  }\r\n\r\n  function on_toggle_console() {\r\n    if (log_height < 90) {\r\n      prev_height = log_height;\r\n      log_height = 90;\r\n    } else {\r\n      log_height = prev_height || 45;\r\n    }\r\n  }\r\n\r\n  function clear_logs() {\r\n    current_log_group = logs = [];\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .iframe-container {\r\n    position: absolute;\r\n    background-color: white;\r\n    border: none;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  iframe {\r\n    width: 100%;\r\n    height: 100%;\r\n    /* height: calc(100vh - var(--nav-h)); */\r\n    border: none;\r\n    display: block;\r\n  }\r\n\r\n  .greyed-out {\r\n    filter: grayscale(50%) blur(1px);\r\n    opacity: 0.25;\r\n  }\r\n\r\n  button {\r\n    color: #999;\r\n    font-size: 12px;\r\n    text-transform: uppercase;\r\n    display: block;\r\n  }\r\n\r\n  button:hover {\r\n    color: #333;\r\n  }\r\n\r\n  .overlay {\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n  }\r\n</style>\r\n\r\n<div class=\"iframe-container\">\r\n  <PaneWithPanel pos={100} panel=\"Console\">\r\n    <div slot=\"main\">\r\n      <iframe\r\n        title=\"Result\"\r\n        class:inited\r\n        bind:this={iframe}\r\n        sandbox=\"allow-same-origin allow-popups-to-escape-sandbox allow-scripts allow-popups\r\n        allow-forms allow-pointer-lock allow-top-navigation allow-modals {relaxed ? 'allow-same-origin' : ''}\"\r\n        class={error || pending || pending_imports ? 'greyed-out' : ''}\r\n        {srcdoc} />\r\n    </div>\r\n\r\n    <div slot=\"panel-header\">\r\n      <button on:click|stopPropagation={clear_logs}>\r\n        {#if logs.length > 0}({logs.length}){/if}\r\n        Clear\r\n      </button>\r\n    </div>\r\n\r\n    <section slot=\"panel-body\">\r\n      <Console {logs} on:clear={clear_logs} />\r\n    </section>\r\n  </PaneWithPanel>\r\n\r\n  <div class=\"overlay\">\r\n    {#if error}\r\n      <Message kind=\"error\" details={error} />\r\n    {:else if status || !$bundle}\r\n      <Message kind=\"info\" truncate>\r\n        {status || 'loading Svelte compiler...'}\r\n      </Message>\r\n    {/if}\r\n  </div>\r\n</div>\r\n",
    "<script>\r\n  import { getContext, onMount } from 'svelte';\r\n  import marked from 'marked';\r\n  import SplitPane from '../SplitPane.svelte';\r\n  import Viewer from './Viewer.svelte';\r\n  import PaneWithPanel from './PaneWithPanel.svelte';\r\n  import CompilerOptions from './CompilerOptions.svelte';\r\n  import Compiler from './Compiler.js';\r\n  import CodeMirror from '../CodeMirror.svelte';\r\n  import { is_browser } from '../env.js';\r\n\r\n  const { register_output } = getContext('REPL');\r\n\r\n  export let svelteUrl;\r\n  export let workersUrl;\r\n  export let status;\r\n  export let sourceErrorLoc = null;\r\n  export let runtimeError = null;\r\n  export let embedded = false;\r\n  export let relaxed = false;\r\n  export let injectedJS;\r\n  export let injectedCSS;\r\n\r\n  let foo; // TODO workaround for https://github.com/sveltejs/svelte/issues/2122\r\n\r\n  register_output({\r\n    set: async (selected, options) => {\r\n      selected_type = selected.type;\r\n\r\n      if (selected.type === 'js' || selected.type === 'json') {\r\n        js_editor.set(`/* Select a component to see its compiled code */`);\r\n        css_editor.set(`/* Select a component to see its compiled code */`);\r\n        return;\r\n      }\r\n\r\n      if (selected.type === 'md') {\r\n        markdown = marked(selected.source);\r\n        return;\r\n      }\r\n\r\n      const compiled = await compiler.compile(selected, options);\r\n      if (!js_editor) return; // unmounted\r\n\r\n      js_editor.set(compiled.js, 'js');\r\n      css_editor.set(compiled.css, 'css');\r\n    },\r\n\r\n    update: async (selected, options) => {\r\n      if (selected.type === 'js' || selected.type === 'json') return;\r\n\r\n      if (selected.type === 'md') {\r\n        markdown = marked(selected.source);\r\n        return;\r\n      }\r\n\r\n      const compiled = await compiler.compile(selected, options);\r\n      if (!js_editor) return; // unmounted\r\n\r\n      js_editor.update(compiled.js);\r\n      css_editor.update(compiled.css);\r\n    },\r\n  });\r\n\r\n  const compiler = is_browser && new Compiler(workersUrl, svelteUrl);\r\n\r\n  // refs\r\n  let viewer;\r\n  let js_editor;\r\n  let css_editor;\r\n  const setters = {};\r\n\r\n  export let view = 'result';\r\n  let selected_type = '';\r\n  let markdown = '';\r\n</script>\r\n\r\n<style>\r\n  .view-toggle {\r\n    height: var(--pane-controls-h);\r\n    border-bottom: 1px solid #eee;\r\n    white-space: nowrap;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  button {\r\n    /* width: 50%;\r\n\t\theight: 100%; */\r\n    background: white;\r\n    text-align: left;\r\n    position: relative;\r\n    font: 400 12px/1.5 var(--font);\r\n    border: none;\r\n    border-bottom: 3px solid transparent;\r\n    padding: 12px 12px 8px 12px;\r\n    color: #999;\r\n    border-radius: 0;\r\n  }\r\n\r\n  button.active {\r\n    border-bottom: 3px solid var(--prime);\r\n    color: #333;\r\n  }\r\n\r\n  div[slot] {\r\n    height: 100%;\r\n  }\r\n\r\n  .tab-content {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: calc(100% - 42px) !important;\r\n    opacity: 0;\r\n    pointer-events: none;\r\n  }\r\n\r\n  .tab-content.visible {\r\n    /* can't use visibility due to a weird painting bug in Chrome */\r\n    opacity: 1;\r\n    pointer-events: all;\r\n  }\r\n  iframe {\r\n    width: 100%;\r\n    height: 100%;\r\n    border: none;\r\n    display: block;\r\n  }\r\n</style>\r\n\r\n<div class=\"view-toggle\">\r\n  {#if selected_type === 'md'}\r\n    <button class=\"active\">Markdown</button>\r\n  {:else}\r\n    <button class:active={view === 'result'} on:click={() => (view = 'result')}>\r\n      Result\r\n    </button>\r\n\r\n    <!-- <button class:active={view === 'js'} on:click={() => (view = 'js')}>\r\n      JS output\r\n    </button>\r\n\r\n    <button class:active={view === 'css'} on:click={() => (view = 'css')}>\r\n      CSS output\r\n    </button> -->\r\n\r\n    <button class:active={view === 'intermediate'} on:click={() => (view = 'intermediate')}>\r\n      Intermediate View\r\n    </button>\r\n  {/if}\r\n</div>\r\n\r\n<!-- component viewer/intermediate output -->\r\n<div\r\n  class=\"tab-content\"\r\n  class:visible={selected_type !== 'md' && (view === 'result' || view === 'intermediate')}>\r\n  <Viewer\r\n    bind:this={viewer}\r\n    bind:error={runtimeError}\r\n    {status}\r\n    {relaxed}\r\n    {injectedJS}\r\n    {injectedCSS} />\r\n</div>\r\n\r\n<!-- js output -->\r\n<!-- <div\r\n  class=\"tab-content\"\r\n  class:visible={selected_type !== 'md' && view === 'js'}>\r\n  {#if embedded}\r\n    <CodeMirror\r\n      bind:this={js_editor}\r\n      mode=\"js\"\r\n      errorLoc={sourceErrorLoc}\r\n      readonly />\r\n  {:else}\r\n    <PaneWithPanel pos={67} panel=\"Compiler options\">\r\n      <div slot=\"main\">\r\n        <CodeMirror\r\n          bind:this={js_editor}\r\n          mode=\"js\"\r\n          errorLoc={sourceErrorLoc}\r\n          readonly />\r\n      </div>\r\n\r\n      <div slot=\"panel-body\">\r\n        <CompilerOptions />\r\n      </div>\r\n    </PaneWithPanel>\r\n  {/if}\r\n</div> -->\r\n\r\n<!-- css output -->\r\n<!-- <div\r\n  class=\"tab-content\"\r\n  class:visible={selected_type !== 'md' && view === 'css'}>\r\n  <CodeMirror\r\n    bind:this={css_editor}\r\n    mode=\"css\"\r\n    errorLoc={sourceErrorLoc}\r\n    readonly />\r\n</div> -->\r\n\r\n<!-- markdown output -->\r\n<div class=\"tab-content\" class:visible={selected_type === 'md'}>\r\n  <iframe title=\"Markdown\" srcdoc={markdown} />\r\n</div>",
    "<script>\r\n  import {\r\n    setContext,\r\n    getContext,\r\n    createEventDispatcher,\r\n    onDestroy,\r\n  } from 'svelte';\r\n  import { writable } from 'svelte/store';\r\n  import SplitPane from './SplitPane.svelte';\r\n  import ComponentSelector from './Input/ComponentSelector.svelte';\r\n  import ModuleEditor from './Input/ModuleEditor.svelte';\r\n  import Output from './Output/index.svelte';\r\n  import Bundler from './Bundler.js';\r\n  import { is_browser } from './env.js';\r\n  import PaneWithPanel from './Output/PaneWithPanel.svelte';\r\n  import CodeMirror from './CodeMirror.svelte';\r\n  import { spring } from 'svelte/motion';\r\n\r\n  import {\r\n    components,\r\n    debug,\r\n    selectedComponent as selected,\r\n    autoRun,\r\n    prevPilingState,\r\n  } from '../stores.js';\r\n\r\n  import {\r\n    DEFAULT_DATA_NAME,\r\n    DATA_JSON_INDEX,\r\n    INTERMEDIATE_APP_MAP,\r\n  } from '../constants.js';\r\n\r\n  export let workersUrl;\r\n  export let packagesUrl = 'https://unpkg.com';\r\n  export let svelteUrl = `${packagesUrl}/svelte`;\r\n  export let embedded = false;\r\n  export let orientation = 'columns';\r\n  export let relaxed = false;\r\n  export let fixed = false;\r\n  export let fixedPos = 50;\r\n  export let injectedJS = '';\r\n  export let injectedCSS = '';\r\n  export let openLoadDataModal;\r\n\r\n  const topEditorHistoryMap = new Map();\r\n  const historyMap = new Map();\r\n\r\n  export function toJSON() {\r\n    return {\r\n      imports: $bundle && $bundle.imports,\r\n      components: $components,\r\n    };\r\n  }\r\n\r\n  export async function refresh() {\r\n    rebundle();\r\n\r\n    await module_editor_ready;\r\n    await output_ready;\r\n\r\n    await module_editor.set($selected.source, $selected.type);\r\n    output.set($selected, $compile_options);\r\n\r\n    historyMap.clear();\r\n    module_editor.clearHistory();\r\n    handle_select($components[0]);\r\n\r\n    initTop();\r\n  }\r\n\r\n  async function initTop() {\r\n    await whenDataEditorReady;\r\n    await dataEditor.set(\r\n      $components[DATA_JSON_INDEX].source,\r\n      $components[DATA_JSON_INDEX].type\r\n    );\r\n    output.set($components[DATA_JSON_INDEX], $compile_options);\r\n\r\n    dataEditor.clearHistory();\r\n  }\r\n\r\n  // export function update(data) {\r\n  //   const { name, type } = $selected || {};\r\n\r\n  //   components.set(data.components);\r\n\r\n  //   const matched_component = data.components.find(\r\n  //     (file) => file.name === name && file.type === type\r\n  //   );\r\n  //   selected.set(matched_component || data.components[0]);\r\n\r\n  //   injectedCSS = data.css || '';\r\n\r\n  //   if (matched_component) {\r\n  //     module_editor.update(matched_component.source);\r\n  //     output.update(matched_component, $compile_options);\r\n  //   } else {\r\n  //     module_editor.set(matched_component.source, matched_component.type);\r\n  //     output.set(matched_component, $compile_options);\r\n\r\n  //     module_editor.clearHistory();\r\n  //   }\r\n  // }\r\n\r\n  if (!workersUrl) {\r\n    throw new Error(`You must supply workersUrl prop to <Repl>`);\r\n  }\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  const bundle = writable(null);\r\n  const compile_options = writable({\r\n    generate: 'dom',\r\n    dev: false,\r\n    css: false,\r\n    hydratable: false,\r\n    customElement: false,\r\n    immutable: false,\r\n    legacy: false,\r\n  });\r\n\r\n  let module_editor;\r\n  let output;\r\n\r\n  let current_token;\r\n  export async function rebundle() {\r\n    const token = (current_token = {});\r\n    // bundle components along with previous piling state (unless in debug mode)\r\n    const result = await bundler.bundle([\r\n      ...$components,\r\n      {\r\n        type: 'js',\r\n        name: 'piling-state',\r\n        source: `const prevPilingState = ${\r\n          $debug ? null : $prevPilingState\r\n        };export default prevPilingState;`,\r\n      },\r\n    ]);\r\n    if (result && token === current_token) {\r\n      bundle.set(result);\r\n    }\r\n    // update selected component\r\n    if (!$selected) {\r\n      // select first component and reset editor\r\n      handle_select($components[0]);\r\n    } else {\r\n      // keep the same component if still there, otherwise select first component and reset editor\r\n      const newComponent = $components.find((el) => {\r\n        return el.name === $selected.name && el.type === $selected.type;\r\n      });\r\n      if ($selected !== newComponent) {\r\n        handle_select(newComponent || $components[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  let view;\r\n  $: view === 'intermediate' ? bundleIntermediate() : rebundle();\r\n\r\n  async function bundleIntermediate() {\r\n    const token = (current_token = {});\r\n    const intermediateApp =\r\n      INTERMEDIATE_APP_MAP[`${$selected.name}.${$selected.type}`] ||\r\n      $components[0];\r\n    const result = await bundler.bundle(\r\n      $components.slice(1).concat([intermediateApp])\r\n    );\r\n    if (result && token === current_token) bundle.set(result);\r\n  }\r\n\r\n  // TODO this is a horrible kludge, written in a panic. fix it\r\n  let fulfil_module_editor_ready;\r\n  let module_editor_ready = new Promise(\r\n    (f) => (fulfil_module_editor_ready = f)\r\n  );\r\n\r\n  let fulfillDataEditorReady;\r\n  let whenDataEditorReady = new Promise((f) => (fulfillDataEditorReady = f));\r\n\r\n  let fulfil_output_ready;\r\n  let output_ready = new Promise((f) => (fulfil_output_ready = f));\r\n\r\n  function splitName(fileName) {\r\n    const match = /^(.+)\\.(\\w+)$/.exec(fileName);\r\n    if (!match) return [];\r\n    return match;\r\n  }\r\n\r\n  setContext('REPL', {\r\n    components,\r\n    selected,\r\n    bundle,\r\n    compile_options,\r\n\r\n    rebundle,\r\n    refresh,\r\n\r\n    navigate: (item) => {\r\n      const [, name, type] = splitName(item.fileName);\r\n      const component = $components.find(\r\n        (c) => c.name === name && c.type === type\r\n      );\r\n      handle_select(component);\r\n\r\n      // TODO select the line/column in question\r\n    },\r\n\r\n    handle_change: (event) => {\r\n      selected.update((component) => {\r\n        // TODO this is a bit hacky — we're relying on mutability\r\n        // so that updating components works... might be better\r\n        // if a) components had unique IDs, b) we tracked selected\r\n        // *index* rather than component, and c) `selected` was\r\n        // derived from `components` and `index`\r\n        component.source = event.detail.value;\r\n        return component;\r\n      });\r\n\r\n      components.update((c) => c);\r\n\r\n      // recompile selected component\r\n      output.update($selected, $compile_options);\r\n\r\n      $autoRun && rebundle();\r\n\r\n      dispatch('change', {\r\n        components: $components,\r\n      });\r\n    },\r\n\r\n    handle_data_change: (event) => {\r\n      components.update((components) => {\r\n        // TODO this is a bit hacky — we're relying on mutability\r\n        // so that updating components works... might be better\r\n        // if a) components had unique IDs, b) we tracked selected\r\n        // *index* rather than component, and c) `selected` was\r\n        // derived from `components` and `index`\r\n        components[DATA_JSON_INDEX].source = event.detail.value;\r\n        return components;\r\n      });\r\n\r\n      components.update((c) => c);\r\n\r\n      // recompile selected component\r\n      output.update($components[DATA_JSON_INDEX], $compile_options);\r\n\r\n      $autoRun && rebundle();\r\n\r\n      dispatch('change', {\r\n        components: $components,\r\n      });\r\n    },\r\n\r\n    register_module_editor(editor) {\r\n      module_editor = editor;\r\n      fulfil_module_editor_ready();\r\n    },\r\n\r\n    register_output(handlers) {\r\n      output = handlers;\r\n      fulfil_output_ready();\r\n    },\r\n\r\n    request_focus() {\r\n      module_editor.focus();\r\n    },\r\n  });\r\n\r\n  const { handle_data_change } = getContext('REPL');\r\n\r\n  const handle_select_historyMap = (historyMap, component) => {\r\n    historyMap.set(get_component_name($selected), module_editor.getHistory());\r\n    selected.set(component);\r\n    module_editor.set(component.source, component.type);\r\n    if (historyMap.has(get_component_name($selected))) {\r\n      module_editor.setHistory(historyMap.get(get_component_name($selected)));\r\n    } else {\r\n      module_editor.clearHistory();\r\n    }\r\n    output.set($selected, $compile_options);\r\n    if (view === 'intermediate') {\r\n      bundleIntermediate();\r\n    }\r\n  };\r\n\r\n  function handle_select(component) {\r\n    handle_select_historyMap(historyMap, component);\r\n  }\r\n\r\n  function get_component_name(component) {\r\n    return `${component.name}.${component.type}`;\r\n  }\r\n\r\n  function getComponentByName(fileName) {\r\n    const [, name, type] = splitName(fileName);\r\n    return $components.find((c) => c.name === name && c.type === type);\r\n  }\r\n\r\n  let dataEditor;\r\n\r\n  let input;\r\n  let sourceErrorLoc;\r\n  let runtimeErrorLoc; // TODO refactor this stuff — runtimeErrorLoc is unused\r\n  let status = null;\r\n  const bundler =\r\n    is_browser &&\r\n    new Bundler({\r\n      workersUrl,\r\n      packagesUrl,\r\n      svelteUrl,\r\n      onstatus: (message) => {\r\n        status = message;\r\n      },\r\n    });\r\n\r\n  $: if (output && $selected) {\r\n    output.update($selected, $compile_options);\r\n  }\r\n\r\n  // position of lower panel\r\n  let pos = 50;\r\n  let previous_pos = 50;\r\n\r\n  const driver = spring(pos);\r\n  $: pos = $driver;\r\n\r\n  const toggleTop = () => {\r\n    driver.set(pos, { hard: true });\r\n\r\n    if (pos < 20) {\r\n      driver.set(previous_pos);\r\n    } else {\r\n      previous_pos = pos;\r\n      driver.set(0);\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .container :global(section) {\r\n    position: relative;\r\n    padding: 42px 0 0 0;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .container :global(section) > :global(*):first-child {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 42px;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  .container :global(section) > :global(*):last-child {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .container :global(.editor-wrapper) {\r\n    height: 100%;\r\n  }\r\n\r\n  .container .editor-wrapper {\r\n    background: var(--back-light);\r\n  }\r\n\r\n  .container .panel-header {\r\n    height: 42px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 0.5em;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .container h3 {\r\n    font: 700 12px/1.5 var(--font);\r\n    color: #333;\r\n  }\r\n\r\n  .container button {\r\n    color: #999;\r\n    font-size: 0.75em;\r\n    display: block;\r\n  }\r\n\r\n  .container button:hover {\r\n    color: #333;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\" class:orientation>\r\n  <SplitPane\r\n    type={orientation === 'rows' ? 'vertical' : 'horizontal'}\r\n    pos={fixed ? fixedPos : orientation === 'rows' ? 50 : 60}\r\n    {fixed}>\r\n    <section slot=\"a\">\r\n      <ComponentSelector {handle_select} handle_data_select={initTop} />\r\n      <PaneWithPanel\r\n        bind:pos\r\n        panel={$selected.name === DEFAULT_DATA_NAME ? 'Data Transformer' : 'Custom Code'}>\r\n        <div slot=\"main\">\r\n          <div class=\"panel-header\" on:click={toggleTop}>\r\n            <h3>\r\n              {$selected.name === DEFAULT_DATA_NAME ? 'Raw Data' : 'Options'}\r\n            </h3>\r\n            <button on:click|stopPropagation={openLoadDataModal}>\r\n              Import Data\r\n            </button>\r\n          </div>\r\n          {#if $selected.name === DEFAULT_DATA_NAME}\r\n            <div class=\"editor-wrapper\" style=\"height: calc(100% - 42px)\">\r\n              <CodeMirror\r\n                bind:this={dataEditor}\r\n                errorLoc={sourceErrorLoc || runtimeErrorLoc}\r\n                on:change={handle_data_change}\r\n                on:editorReady={fulfillDataEditorReady} />\r\n            </div>\r\n          {:else}buttons here{/if}\r\n        </div>\r\n\r\n        <div slot=\"panel-body\" style=\"display: flex; height: 100%;\">\r\n          <ModuleEditor\r\n            bind:this={input}\r\n            errorLoc={sourceErrorLoc || runtimeErrorLoc} />\r\n        </div>\r\n      </PaneWithPanel>\r\n    </section>\r\n\r\n    <section slot=\"b\" style=\"height: 100%;\">\r\n      <Output\r\n        {svelteUrl}\r\n        {workersUrl}\r\n        {status}\r\n        {embedded}\r\n        {relaxed}\r\n        {injectedJS}\r\n        {injectedCSS}\r\n        bind:view />\r\n    </section>\r\n  </SplitPane>\r\n</div>\r\n",
    "<script>\r\n  import * as yootils from 'yootils';\r\n  import { createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  export let type;\r\n  export let pos = 50;\r\n  export let fixed = false;\r\n  export let buffer = 42;\r\n  export let min;\r\n  export let max;\r\n\r\n  let w;\r\n  let h;\r\n  $: size = type === 'vertical' ? h : w;\r\n\r\n  $: min = 100 * (buffer / size);\r\n  $: max = 100 - min;\r\n  $: pos = yootils.clamp(pos, min, max);\r\n\r\n  const refs = {};\r\n\r\n  let dragging = false;\r\n\r\n  function setPos(event) {\r\n    const { top, left } = refs.container.getBoundingClientRect();\r\n\r\n    const px = type === 'vertical' ? event.clientY - top : event.clientX - left;\r\n\r\n    pos = (100 * px) / size;\r\n    dispatch('change');\r\n  }\r\n\r\n  function setTouchPos(event) {\r\n    const { top, left } = refs.container.getBoundingClientRect();\r\n\r\n    const px =\r\n      type === 'vertical'\r\n        ? event.touches[0].clientY - top\r\n        : event.touches[0].clientX - left;\r\n\r\n    pos = (100 * px) / size;\r\n    dispatch('change');\r\n  }\r\n\r\n  function drag(node, callback) {\r\n    const mousedown = (event) => {\r\n      if (event.which !== 1) return;\r\n\r\n      event.preventDefault();\r\n\r\n      dragging = true;\r\n\r\n      const onmouseup = () => {\r\n        dragging = false;\r\n\r\n        window.removeEventListener('mousemove', callback, false);\r\n        window.removeEventListener('mouseup', onmouseup, false);\r\n      };\r\n\r\n      window.addEventListener('mousemove', callback, false);\r\n      window.addEventListener('mouseup', onmouseup, false);\r\n    };\r\n\r\n    node.addEventListener('mousedown', mousedown, false);\r\n\r\n    return {\r\n      destroy() {\r\n        node.removeEventListener('mousedown', mousedown, false);\r\n      },\r\n    };\r\n  }\r\n\r\n  function touchDrag(node, callback) {\r\n    const touchdown = (event) => {\r\n      if (event.targetTouches.length > 1) return;\r\n\r\n      event.preventDefault();\r\n\r\n      dragging = true;\r\n\r\n      const ontouchend = () => {\r\n        dragging = false;\r\n\r\n        window.removeEventListener('touchmove', callback, false);\r\n        window.removeEventListener('touchend', ontouchend, false);\r\n      };\r\n\r\n      window.addEventListener('touchmove', callback, false);\r\n      window.addEventListener('touchend', ontouchend, false);\r\n    };\r\n\r\n    node.addEventListener('touchstart', touchdown, false);\r\n\r\n    return {\r\n      destroy() {\r\n        node.removeEventListener('touchstart', touchdown, false);\r\n      },\r\n    };\r\n  }\r\n\r\n  $: side = type === 'horizontal' ? 'left' : 'top';\r\n  $: dimension = type === 'horizontal' ? 'width' : 'height';\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .pane {\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: auto;\r\n  }\r\n\r\n  .mousecatcher {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(255, 255, 255, 0.01);\r\n  }\r\n\r\n  .divider {\r\n    position: absolute;\r\n    z-index: 10;\r\n    display: none;\r\n  }\r\n\r\n  .divider::after {\r\n    content: '';\r\n    position: absolute;\r\n    /* background-color: #eee; */\r\n    background-color: var(--second);\r\n  }\r\n\r\n  .horizontal {\r\n    padding: 0 8px;\r\n    width: 0;\r\n    height: 100%;\r\n    cursor: ew-resize;\r\n  }\r\n\r\n  .horizontal::after {\r\n    left: 8px;\r\n    top: 0;\r\n    width: 1px;\r\n    height: 100%;\r\n  }\r\n\r\n  .vertical {\r\n    padding: 8px 0;\r\n    width: 100%;\r\n    height: 0;\r\n    cursor: ns-resize;\r\n  }\r\n\r\n  .vertical::after {\r\n    top: 8px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 1px;\r\n  }\r\n\r\n  .left,\r\n  .right,\r\n  .divider {\r\n    display: block;\r\n  }\r\n\r\n  .left,\r\n  .right {\r\n    height: 100%;\r\n    float: left;\r\n  }\r\n\r\n  .top,\r\n  .bottom {\r\n    position: absolute;\r\n    width: 100%;\r\n  }\r\n\r\n  .top {\r\n    top: 0;\r\n  }\r\n  .bottom {\r\n    bottom: 0;\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"container\"\r\n  bind:this={refs.container}\r\n  bind:clientWidth={w}\r\n  bind:clientHeight={h}>\r\n  <div class=\"pane\" style=\"{dimension}: {pos}%;\">\r\n    <slot name=\"a\" />\r\n  </div>\r\n\r\n  <div class=\"pane\" style=\"{dimension}: {100 - pos}%;\">\r\n    <slot name=\"b\" />\r\n  </div>\r\n\r\n  {#if !fixed}\r\n    <div\r\n      class=\"{type} divider\"\r\n      style=\"{side}: calc({pos}% - 8px)\"\r\n      use:drag={setPos}\r\n      use:touchDrag={setTouchPos} />\r\n  {/if}\r\n</div>\r\n\r\n{#if dragging}\r\n  <div class=\"mousecatcher\" />\r\n{/if}\r\n"
  ],
  "names": [],
  "mappings": "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"
}